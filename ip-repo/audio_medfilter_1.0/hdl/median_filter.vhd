-- File: median_filter.vhd
-- Generated by MyHDL 0.10
-- Date: Fri Sep 18 22:28:36 2020


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_010.all;

entity median_filter is
    port (
        clk: in std_logic;
        reset: in std_logic;
        xin: in signed (23 downto 0);
        dvi: in std_logic;
        yout: out signed (23 downto 0)
    );
end entity median_filter;
-- Sort Array with N values 

architecture MyHDL of median_filter is



signal xcnt: unsigned(5 downto 0);
signal sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_comp_comp_3_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_comp_comp_3_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_comp_comp_2_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_comp_comp_2_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_comp_comp_3_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_comp_comp_3_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_comp_comp_2_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_comp_comp_2_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_comp_comp_7_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_comp_comp_7_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_comp_comp_6_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_comp_comp_6_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_comp_comp_5_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_comp_comp_5_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_comp_comp_4_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_comp_comp_4_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_comp_comp_3_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_comp_comp_3_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_comp_comp_2_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_comp_comp_2_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_comp_comp_3_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_comp_comp_3_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_comp_comp_2_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_comp_comp_2_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_comp_comp_3_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_comp_comp_3_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_comp_comp_2_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_comp_comp_2_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_comp_comp_7_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_comp_comp_7_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_comp_comp_6_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_comp_comp_6_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_comp_comp_5_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_comp_comp_5_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_comp_comp_4_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_comp_comp_4_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_comp_comp_3_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_comp_comp_3_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_comp_comp_2_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_comp_comp_2_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_merge_comp_comp_15_a_1: signed (23 downto 0);
signal sort_merge_comp_comp_15_a_2: signed (23 downto 0);
signal sort_merge_comp_comp_14_a_1: signed (23 downto 0);
signal sort_merge_comp_comp_14_a_2: signed (23 downto 0);
signal sort_merge_comp_comp_13_a_1: signed (23 downto 0);
signal sort_merge_comp_comp_13_a_2: signed (23 downto 0);
signal sort_merge_comp_comp_12_a_1: signed (23 downto 0);
signal sort_merge_comp_comp_12_a_2: signed (23 downto 0);
signal sort_merge_comp_comp_11_a_1: signed (23 downto 0);
signal sort_merge_comp_comp_11_a_2: signed (23 downto 0);
signal sort_merge_comp_comp_10_a_1: signed (23 downto 0);
signal sort_merge_comp_comp_10_a_2: signed (23 downto 0);
signal sort_merge_comp_comp_9_a_1: signed (23 downto 0);
signal sort_merge_comp_comp_9_a_2: signed (23 downto 0);
signal sort_merge_comp_comp_8_a_1: signed (23 downto 0);
signal sort_merge_comp_comp_8_a_2: signed (23 downto 0);
signal sort_merge_comp_comp_7_a_1: signed (23 downto 0);
signal sort_merge_comp_comp_7_a_2: signed (23 downto 0);
signal sort_merge_comp_comp_6_a_1: signed (23 downto 0);
signal sort_merge_comp_comp_6_a_2: signed (23 downto 0);
signal sort_merge_comp_comp_5_a_1: signed (23 downto 0);
signal sort_merge_comp_comp_5_a_2: signed (23 downto 0);
signal sort_merge_comp_comp_4_a_1: signed (23 downto 0);
signal sort_merge_comp_comp_4_a_2: signed (23 downto 0);
signal sort_merge_comp_comp_3_a_1: signed (23 downto 0);
signal sort_merge_comp_comp_3_a_2: signed (23 downto 0);
signal sort_merge_comp_comp_2_a_1: signed (23 downto 0);
signal sort_merge_comp_comp_2_a_2: signed (23 downto 0);
signal sort_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_comp_comp_3_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_comp_comp_3_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_comp_comp_2_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_comp_comp_2_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_comp_comp_3_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_comp_comp_3_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_comp_comp_2_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_comp_comp_2_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_comp_comp_7_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_comp_comp_7_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_comp_comp_6_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_comp_comp_6_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_comp_comp_5_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_comp_comp_5_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_comp_comp_4_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_comp_comp_4_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_comp_comp_3_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_comp_comp_3_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_comp_comp_2_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_comp_comp_2_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_hi_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_comp_comp_3_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_comp_comp_3_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_comp_comp_2_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_comp_comp_2_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_comp_comp_3_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_comp_comp_3_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_comp_comp_2_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_comp_comp_2_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_comp_comp_3_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_comp_comp_3_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_comp_comp_2_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_comp_comp_2_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_comp_comp_3_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_comp_comp_3_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_comp_comp_2_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_comp_comp_2_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_comp_comp_7_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_comp_comp_7_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_comp_comp_6_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_comp_comp_6_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_comp_comp_5_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_comp_comp_5_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_comp_comp_4_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_comp_comp_4_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_comp_comp_3_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_comp_comp_3_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_comp_comp_2_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_comp_comp_2_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_lo_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_comp_comp_3_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_comp_comp_3_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_comp_comp_2_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_comp_comp_2_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_comp_comp_3_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_comp_comp_3_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_comp_comp_2_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_comp_comp_2_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_1_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_1_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1: signed (23 downto 0);
signal sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2: signed (23 downto 0);
type t_array_x_list is array(0 to 32-1) of signed (23 downto 0);
signal x_list: t_array_x_list;
type t_array_y_list is array(0 to 32-1) of signed (23 downto 0);
signal y_list: t_array_y_list;

begin




-- Combinatorial logic 

sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1 <= x_list(0);

-- Combinatorial logic 

sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2 <= x_list(1);

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_LO_SORT_LO_SORT_MERGE_COMP_0_LOGIC: process (sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2, sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1 > sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2)) then
        sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2;
        sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1;
        sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_LO_SORT_LO_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_1_a_1 <= sort_lo_sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1 <= x_list(2);

-- Combinatorial logic 

sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2 <= x_list(3);

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_LO_SORT_HI_SORT_MERGE_COMP_0_LOGIC: process (sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2, sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1 > sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2)) then
        sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2;
        sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1;
        sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_LO_SORT_HI_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_1_a_2 <= sort_lo_sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_LO_SORT_MERGE_COMP_0_LOGIC: process (sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2, sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1 > sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2)) then
        sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2;
        sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1;
        sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_LO_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_LO_SORT_MERGE_COMP_1_LOGIC: process (sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_1_a_2, sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_1_a_1 > sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_1_a_2)) then
        sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_1_a_2;
        sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_1_a_1;
    else
        sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_1_a_1;
        sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_LO_SORT_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_LO_SORT_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2, sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 > sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2)) then
        sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2;
        sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1;
        sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_LO_SORT_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_lo_sort_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_lo_sort_merge_comp_comp_1_a_1 <= sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_LO_SORT_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2, sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 > sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2)) then
        sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2;
        sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1;
        sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_LO_SORT_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_lo_sort_merge_comp_comp_2_a_1 <= sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_lo_sort_merge_comp_comp_3_a_1 <= sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1 <= x_list(4);

-- Combinatorial logic 

sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2 <= x_list(5);

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_HI_SORT_LO_SORT_MERGE_COMP_0_LOGIC: process (sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2, sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1 > sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2)) then
        sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2;
        sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1;
        sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_HI_SORT_LO_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_1_a_1 <= sort_lo_sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1 <= x_list(6);

-- Combinatorial logic 

sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2 <= x_list(7);

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_HI_SORT_HI_SORT_MERGE_COMP_0_LOGIC: process (sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2, sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1 > sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2)) then
        sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2;
        sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1;
        sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_HI_SORT_HI_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_1_a_2 <= sort_lo_sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_HI_SORT_MERGE_COMP_0_LOGIC: process (sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2, sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1 > sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2)) then
        sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2;
        sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1;
        sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_HI_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_HI_SORT_MERGE_COMP_1_LOGIC: process (sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_1_a_2, sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_1_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_1_a_1 > sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_1_a_2)) then
        sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_1_a_2;
        sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_1_a_1;
    else
        sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_1_a_1;
        sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_HI_SORT_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_HI_SORT_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2, sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 > sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2)) then
        sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2;
        sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1;
        sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_HI_SORT_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_lo_sort_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_lo_sort_merge_comp_comp_1_a_2 <= sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_HI_SORT_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2, sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 > sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2)) then
        sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2;
        sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1;
        sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_HI_SORT_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_lo_sort_merge_comp_comp_2_a_2 <= sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_lo_sort_merge_comp_comp_3_a_2 <= sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_COMP_0_LOGIC: process (sort_lo_sort_lo_sort_merge_comp_comp_0_a_2, sort_lo_sort_lo_sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_lo_sort_merge_comp_comp_0_a_1 > sort_lo_sort_lo_sort_merge_comp_comp_0_a_2)) then
        sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_merge_comp_comp_0_a_2;
        sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_merge_comp_comp_0_a_1;
        sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_COMP_1_LOGIC: process (sort_lo_sort_lo_sort_merge_comp_comp_1_a_2, sort_lo_sort_lo_sort_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_lo_sort_merge_comp_comp_1_a_1 > sort_lo_sort_lo_sort_merge_comp_comp_1_a_2)) then
        sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_1_a_1 <= sort_lo_sort_lo_sort_merge_comp_comp_1_a_2;
        sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_1_a_1 <= sort_lo_sort_lo_sort_merge_comp_comp_1_a_1;
    else
        sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_1_a_1 <= sort_lo_sort_lo_sort_merge_comp_comp_1_a_1;
        sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_1_a_1 <= sort_lo_sort_lo_sort_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_COMP_2_LOGIC: process (sort_lo_sort_lo_sort_merge_comp_comp_2_a_2, sort_lo_sort_lo_sort_merge_comp_comp_2_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_lo_sort_merge_comp_comp_2_a_1 > sort_lo_sort_lo_sort_merge_comp_comp_2_a_2)) then
        sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_merge_comp_comp_2_a_2;
        sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_merge_comp_comp_2_a_1;
    else
        sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_merge_comp_comp_2_a_1;
        sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_merge_comp_comp_2_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_COMP_2_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_COMP_3_LOGIC: process (sort_lo_sort_lo_sort_merge_comp_comp_3_a_2, sort_lo_sort_lo_sort_merge_comp_comp_3_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_lo_sort_merge_comp_comp_3_a_1 > sort_lo_sort_lo_sort_merge_comp_comp_3_a_2)) then
        sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_1_a_2 <= sort_lo_sort_lo_sort_merge_comp_comp_3_a_2;
        sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_1_a_2 <= sort_lo_sort_lo_sort_merge_comp_comp_3_a_1;
    else
        sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_1_a_2 <= sort_lo_sort_lo_sort_merge_comp_comp_3_a_1;
        sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_1_a_2 <= sort_lo_sort_lo_sort_merge_comp_comp_3_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_COMP_3_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2, sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 > sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2)) then
        sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2;
        sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1;
        sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_LO_MERGE_COMP_1_LOGIC: process (sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_1_a_2, sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_1_a_1 > sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_1_a_2)) then
        sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_1_a_2;
        sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_1_a_1;
    else
        sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_1_a_1;
        sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_LO_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2, sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 > sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2)) then
        sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2;
        sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1;
        sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_1_a_1 <= sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2, sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 > sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2)) then
        sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2;
        sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1;
        sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_2_a_1 <= sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_3_a_1 <= sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2, sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 > sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2)) then
        sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2;
        sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1;
        sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_HI_MERGE_COMP_1_LOGIC: process (sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_1_a_2, sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_1_a_1 > sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_1_a_2)) then
        sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_1_a_2;
        sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_1_a_1;
    else
        sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_1_a_1;
        sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_HI_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2, sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 > sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2)) then
        sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2;
        sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1;
        sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_4_a_1 <= sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_5_a_1 <= sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2, sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 > sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2)) then
        sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2;
        sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1;
        sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_LO_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_6_a_1 <= sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_7_a_1 <= sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1 <= x_list(8);

-- Combinatorial logic 

sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2 <= x_list(9);

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_LO_SORT_LO_SORT_MERGE_COMP_0_LOGIC: process (sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2, sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1 > sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2)) then
        sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2;
        sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1;
        sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_LO_SORT_LO_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_1_a_1 <= sort_lo_sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1 <= x_list(10);

-- Combinatorial logic 

sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2 <= x_list(11);

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_LO_SORT_HI_SORT_MERGE_COMP_0_LOGIC: process (sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2, sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1 > sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2)) then
        sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2;
        sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1;
        sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_LO_SORT_HI_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_1_a_2 <= sort_lo_sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_LO_SORT_MERGE_COMP_0_LOGIC: process (sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2, sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1 > sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2)) then
        sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2;
        sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1;
        sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_LO_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_LO_SORT_MERGE_COMP_1_LOGIC: process (sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_1_a_2, sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_1_a_1 > sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_1_a_2)) then
        sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_1_a_2;
        sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_1_a_1;
    else
        sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_1_a_1;
        sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_LO_SORT_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_LO_SORT_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2, sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 > sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2)) then
        sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2;
        sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1;
        sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_LO_SORT_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_hi_sort_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_hi_sort_merge_comp_comp_1_a_1 <= sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_LO_SORT_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2, sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 > sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2)) then
        sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2;
        sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1;
        sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_LO_SORT_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_hi_sort_merge_comp_comp_2_a_1 <= sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_hi_sort_merge_comp_comp_3_a_1 <= sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1 <= x_list(12);

-- Combinatorial logic 

sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2 <= x_list(13);

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_HI_SORT_LO_SORT_MERGE_COMP_0_LOGIC: process (sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2, sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1 > sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2)) then
        sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2;
        sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1;
        sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_HI_SORT_LO_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_1_a_1 <= sort_lo_sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1 <= x_list(14);

-- Combinatorial logic 

sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2 <= x_list(15);

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_HI_SORT_HI_SORT_MERGE_COMP_0_LOGIC: process (sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2, sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1 > sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2)) then
        sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2;
        sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1;
        sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_HI_SORT_HI_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_1_a_2 <= sort_lo_sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_HI_SORT_MERGE_COMP_0_LOGIC: process (sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2, sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1 > sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2)) then
        sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2;
        sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1;
        sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_HI_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_HI_SORT_MERGE_COMP_1_LOGIC: process (sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_1_a_2, sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_1_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_1_a_1 > sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_1_a_2)) then
        sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_1_a_2;
        sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_1_a_1;
    else
        sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_1_a_1;
        sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_HI_SORT_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_HI_SORT_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2, sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 > sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2)) then
        sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2;
        sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1;
        sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_HI_SORT_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_hi_sort_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_hi_sort_merge_comp_comp_1_a_2 <= sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_HI_SORT_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2, sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 > sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2)) then
        sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2;
        sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1;
        sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_HI_SORT_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_hi_sort_merge_comp_comp_2_a_2 <= sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_hi_sort_merge_comp_comp_3_a_2 <= sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_COMP_0_LOGIC: process (sort_lo_sort_hi_sort_merge_comp_comp_0_a_2, sort_lo_sort_hi_sort_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_hi_sort_merge_comp_comp_0_a_1 > sort_lo_sort_hi_sort_merge_comp_comp_0_a_2)) then
        sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_merge_comp_comp_0_a_2;
        sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_merge_comp_comp_0_a_1;
        sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_COMP_1_LOGIC: process (sort_lo_sort_hi_sort_merge_comp_comp_1_a_2, sort_lo_sort_hi_sort_merge_comp_comp_1_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_hi_sort_merge_comp_comp_1_a_1 > sort_lo_sort_hi_sort_merge_comp_comp_1_a_2)) then
        sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_1_a_1 <= sort_lo_sort_hi_sort_merge_comp_comp_1_a_2;
        sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_1_a_1 <= sort_lo_sort_hi_sort_merge_comp_comp_1_a_1;
    else
        sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_1_a_1 <= sort_lo_sort_hi_sort_merge_comp_comp_1_a_1;
        sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_1_a_1 <= sort_lo_sort_hi_sort_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_COMP_2_LOGIC: process (sort_lo_sort_hi_sort_merge_comp_comp_2_a_2, sort_lo_sort_hi_sort_merge_comp_comp_2_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_hi_sort_merge_comp_comp_2_a_1 > sort_lo_sort_hi_sort_merge_comp_comp_2_a_2)) then
        sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_merge_comp_comp_2_a_2;
        sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_merge_comp_comp_2_a_1;
    else
        sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_merge_comp_comp_2_a_1;
        sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_merge_comp_comp_2_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_COMP_2_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_COMP_3_LOGIC: process (sort_lo_sort_hi_sort_merge_comp_comp_3_a_2, sort_lo_sort_hi_sort_merge_comp_comp_3_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_hi_sort_merge_comp_comp_3_a_1 > sort_lo_sort_hi_sort_merge_comp_comp_3_a_2)) then
        sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_1_a_2 <= sort_lo_sort_hi_sort_merge_comp_comp_3_a_2;
        sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_1_a_2 <= sort_lo_sort_hi_sort_merge_comp_comp_3_a_1;
    else
        sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_1_a_2 <= sort_lo_sort_hi_sort_merge_comp_comp_3_a_1;
        sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_1_a_2 <= sort_lo_sort_hi_sort_merge_comp_comp_3_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_COMP_3_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2, sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 > sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2)) then
        sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2;
        sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1;
        sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_LO_MERGE_COMP_1_LOGIC: process (sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_1_a_2, sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_1_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_1_a_1 > sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_1_a_2)) then
        sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_1_a_2;
        sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_1_a_1;
    else
        sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_1_a_1;
        sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_LO_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2, sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 > sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2)) then
        sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2;
        sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1;
        sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_1_a_2 <= sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2, sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 > sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2)) then
        sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2;
        sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1;
        sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_2_a_2 <= sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_3_a_2 <= sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2, sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 > sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2)) then
        sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2;
        sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1;
        sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_HI_MERGE_COMP_1_LOGIC: process (sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_1_a_2, sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_1_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_1_a_1 > sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_1_a_2)) then
        sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_1_a_2;
        sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_1_a_1;
    else
        sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_1_a_1;
        sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_HI_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2, sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 > sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2)) then
        sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2;
        sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1;
        sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_4_a_2 <= sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_5_a_2 <= sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2, sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 > sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2)) then
        sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2;
        sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1;
        sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_HI_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_6_a_2 <= sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_lo_sort_merge_comp_comp_7_a_2 <= sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_COMP_0_LOGIC: process (sort_lo_sort_merge_comp_comp_0_a_2, sort_lo_sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_comp_comp_0_a_1 > sort_lo_sort_merge_comp_comp_0_a_2)) then
        sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_comp_comp_0_a_2;
        sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_comp_comp_0_a_1;
        sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_COMP_1_LOGIC: process (sort_lo_sort_merge_comp_comp_1_a_2, sort_lo_sort_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_comp_comp_1_a_1 > sort_lo_sort_merge_comp_comp_1_a_2)) then
        sort_lo_sort_merge_lo_merge_comp_comp_1_a_1 <= sort_lo_sort_merge_comp_comp_1_a_2;
        sort_lo_sort_merge_hi_merge_comp_comp_1_a_1 <= sort_lo_sort_merge_comp_comp_1_a_1;
    else
        sort_lo_sort_merge_lo_merge_comp_comp_1_a_1 <= sort_lo_sort_merge_comp_comp_1_a_1;
        sort_lo_sort_merge_hi_merge_comp_comp_1_a_1 <= sort_lo_sort_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_COMP_2_LOGIC: process (sort_lo_sort_merge_comp_comp_2_a_2, sort_lo_sort_merge_comp_comp_2_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_comp_comp_2_a_1 > sort_lo_sort_merge_comp_comp_2_a_2)) then
        sort_lo_sort_merge_lo_merge_comp_comp_2_a_1 <= sort_lo_sort_merge_comp_comp_2_a_2;
        sort_lo_sort_merge_hi_merge_comp_comp_2_a_1 <= sort_lo_sort_merge_comp_comp_2_a_1;
    else
        sort_lo_sort_merge_lo_merge_comp_comp_2_a_1 <= sort_lo_sort_merge_comp_comp_2_a_1;
        sort_lo_sort_merge_hi_merge_comp_comp_2_a_1 <= sort_lo_sort_merge_comp_comp_2_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_COMP_2_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_COMP_3_LOGIC: process (sort_lo_sort_merge_comp_comp_3_a_2, sort_lo_sort_merge_comp_comp_3_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_comp_comp_3_a_1 > sort_lo_sort_merge_comp_comp_3_a_2)) then
        sort_lo_sort_merge_lo_merge_comp_comp_3_a_1 <= sort_lo_sort_merge_comp_comp_3_a_2;
        sort_lo_sort_merge_hi_merge_comp_comp_3_a_1 <= sort_lo_sort_merge_comp_comp_3_a_1;
    else
        sort_lo_sort_merge_lo_merge_comp_comp_3_a_1 <= sort_lo_sort_merge_comp_comp_3_a_1;
        sort_lo_sort_merge_hi_merge_comp_comp_3_a_1 <= sort_lo_sort_merge_comp_comp_3_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_COMP_3_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_COMP_4_LOGIC: process (sort_lo_sort_merge_comp_comp_4_a_2, sort_lo_sort_merge_comp_comp_4_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_comp_comp_4_a_1 > sort_lo_sort_merge_comp_comp_4_a_2)) then
        sort_lo_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_comp_comp_4_a_2;
        sort_lo_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_comp_comp_4_a_1;
    else
        sort_lo_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_comp_comp_4_a_1;
        sort_lo_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_comp_comp_4_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_COMP_4_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_COMP_5_LOGIC: process (sort_lo_sort_merge_comp_comp_5_a_2, sort_lo_sort_merge_comp_comp_5_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_comp_comp_5_a_1 > sort_lo_sort_merge_comp_comp_5_a_2)) then
        sort_lo_sort_merge_lo_merge_comp_comp_1_a_2 <= sort_lo_sort_merge_comp_comp_5_a_2;
        sort_lo_sort_merge_hi_merge_comp_comp_1_a_2 <= sort_lo_sort_merge_comp_comp_5_a_1;
    else
        sort_lo_sort_merge_lo_merge_comp_comp_1_a_2 <= sort_lo_sort_merge_comp_comp_5_a_1;
        sort_lo_sort_merge_hi_merge_comp_comp_1_a_2 <= sort_lo_sort_merge_comp_comp_5_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_COMP_5_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_COMP_6_LOGIC: process (sort_lo_sort_merge_comp_comp_6_a_2, sort_lo_sort_merge_comp_comp_6_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_comp_comp_6_a_1 > sort_lo_sort_merge_comp_comp_6_a_2)) then
        sort_lo_sort_merge_lo_merge_comp_comp_2_a_2 <= sort_lo_sort_merge_comp_comp_6_a_2;
        sort_lo_sort_merge_hi_merge_comp_comp_2_a_2 <= sort_lo_sort_merge_comp_comp_6_a_1;
    else
        sort_lo_sort_merge_lo_merge_comp_comp_2_a_2 <= sort_lo_sort_merge_comp_comp_6_a_1;
        sort_lo_sort_merge_hi_merge_comp_comp_2_a_2 <= sort_lo_sort_merge_comp_comp_6_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_COMP_6_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_COMP_7_LOGIC: process (sort_lo_sort_merge_comp_comp_7_a_2, sort_lo_sort_merge_comp_comp_7_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_comp_comp_7_a_1 > sort_lo_sort_merge_comp_comp_7_a_2)) then
        sort_lo_sort_merge_lo_merge_comp_comp_3_a_2 <= sort_lo_sort_merge_comp_comp_7_a_2;
        sort_lo_sort_merge_hi_merge_comp_comp_3_a_2 <= sort_lo_sort_merge_comp_comp_7_a_1;
    else
        sort_lo_sort_merge_lo_merge_comp_comp_3_a_2 <= sort_lo_sort_merge_comp_comp_7_a_1;
        sort_lo_sort_merge_hi_merge_comp_comp_3_a_2 <= sort_lo_sort_merge_comp_comp_7_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_COMP_7_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_lo_sort_merge_lo_merge_comp_comp_0_a_2, sort_lo_sort_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 > sort_lo_sort_merge_lo_merge_comp_comp_0_a_2)) then
        sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_lo_merge_comp_comp_0_a_2;
        sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_lo_merge_comp_comp_0_a_1;
        sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_COMP_1_LOGIC: process (sort_lo_sort_merge_lo_merge_comp_comp_1_a_2, sort_lo_sort_merge_lo_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_lo_merge_comp_comp_1_a_1 > sort_lo_sort_merge_lo_merge_comp_comp_1_a_2)) then
        sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_1_a_1 <= sort_lo_sort_merge_lo_merge_comp_comp_1_a_2;
        sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_1_a_1 <= sort_lo_sort_merge_lo_merge_comp_comp_1_a_1;
    else
        sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_1_a_1 <= sort_lo_sort_merge_lo_merge_comp_comp_1_a_1;
        sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_1_a_1 <= sort_lo_sort_merge_lo_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_COMP_2_LOGIC: process (sort_lo_sort_merge_lo_merge_comp_comp_2_a_2, sort_lo_sort_merge_lo_merge_comp_comp_2_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_lo_merge_comp_comp_2_a_1 > sort_lo_sort_merge_lo_merge_comp_comp_2_a_2)) then
        sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_lo_merge_comp_comp_2_a_2;
        sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_lo_merge_comp_comp_2_a_1;
    else
        sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_lo_merge_comp_comp_2_a_1;
        sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_lo_merge_comp_comp_2_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_COMP_2_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_COMP_3_LOGIC: process (sort_lo_sort_merge_lo_merge_comp_comp_3_a_2, sort_lo_sort_merge_lo_merge_comp_comp_3_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_lo_merge_comp_comp_3_a_1 > sort_lo_sort_merge_lo_merge_comp_comp_3_a_2)) then
        sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_1_a_2 <= sort_lo_sort_merge_lo_merge_comp_comp_3_a_2;
        sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_1_a_2 <= sort_lo_sort_merge_lo_merge_comp_comp_3_a_1;
    else
        sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_1_a_2 <= sort_lo_sort_merge_lo_merge_comp_comp_3_a_1;
        sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_1_a_2 <= sort_lo_sort_merge_lo_merge_comp_comp_3_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_COMP_3_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2, sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 > sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2)) then
        sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2;
        sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1;
        sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_1_LOGIC: process (sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_1_a_2, sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_1_a_1 > sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_1_a_2)) then
        sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_1_a_2;
        sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_1_a_1;
    else
        sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_1_a_1;
        sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2, sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1 > sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2)) then
        sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2;
        sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1;
        sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_1_a_1 <= sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2, sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1 > sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2)) then
        sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2;
        sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1;
        sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_2_a_1 <= sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_3_a_1 <= sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2, sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 > sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2)) then
        sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2;
        sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1;
        sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_1_LOGIC: process (sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_1_a_2, sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_1_a_1 > sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_1_a_2)) then
        sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_1_a_2;
        sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_1_a_1;
    else
        sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_1_a_1;
        sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2, sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1 > sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2)) then
        sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2;
        sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1;
        sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_4_a_1 <= sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_5_a_1 <= sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2, sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1 > sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2)) then
        sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2;
        sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1;
        sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_LO_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_6_a_1 <= sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_7_a_1 <= sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_lo_sort_merge_hi_merge_comp_comp_0_a_2, sort_lo_sort_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 > sort_lo_sort_merge_hi_merge_comp_comp_0_a_2)) then
        sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_hi_merge_comp_comp_0_a_2;
        sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_hi_merge_comp_comp_0_a_1;
        sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_COMP_1_LOGIC: process (sort_lo_sort_merge_hi_merge_comp_comp_1_a_2, sort_lo_sort_merge_hi_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_hi_merge_comp_comp_1_a_1 > sort_lo_sort_merge_hi_merge_comp_comp_1_a_2)) then
        sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_1_a_1 <= sort_lo_sort_merge_hi_merge_comp_comp_1_a_2;
        sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_1_a_1 <= sort_lo_sort_merge_hi_merge_comp_comp_1_a_1;
    else
        sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_1_a_1 <= sort_lo_sort_merge_hi_merge_comp_comp_1_a_1;
        sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_1_a_1 <= sort_lo_sort_merge_hi_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_COMP_2_LOGIC: process (sort_lo_sort_merge_hi_merge_comp_comp_2_a_2, sort_lo_sort_merge_hi_merge_comp_comp_2_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_hi_merge_comp_comp_2_a_1 > sort_lo_sort_merge_hi_merge_comp_comp_2_a_2)) then
        sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_hi_merge_comp_comp_2_a_2;
        sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_hi_merge_comp_comp_2_a_1;
    else
        sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_hi_merge_comp_comp_2_a_1;
        sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_hi_merge_comp_comp_2_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_COMP_2_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_COMP_3_LOGIC: process (sort_lo_sort_merge_hi_merge_comp_comp_3_a_2, sort_lo_sort_merge_hi_merge_comp_comp_3_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_hi_merge_comp_comp_3_a_1 > sort_lo_sort_merge_hi_merge_comp_comp_3_a_2)) then
        sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_1_a_2 <= sort_lo_sort_merge_hi_merge_comp_comp_3_a_2;
        sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_1_a_2 <= sort_lo_sort_merge_hi_merge_comp_comp_3_a_1;
    else
        sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_1_a_2 <= sort_lo_sort_merge_hi_merge_comp_comp_3_a_1;
        sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_1_a_2 <= sort_lo_sort_merge_hi_merge_comp_comp_3_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_COMP_3_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2, sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 > sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2)) then
        sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2;
        sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1;
        sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_1_LOGIC: process (sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_1_a_2, sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_1_a_1 > sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_1_a_2)) then
        sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_1_a_2;
        sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_1_a_1;
    else
        sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_1_a_1;
        sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2, sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1 > sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2)) then
        sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2;
        sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1;
        sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_8_a_1 <= sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_9_a_1 <= sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2, sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1 > sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2)) then
        sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2;
        sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1;
        sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_10_a_1 <= sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_11_a_1 <= sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2, sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 > sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2)) then
        sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2;
        sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1;
        sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_1_LOGIC: process (sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_1_a_2, sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_1_a_1 > sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_1_a_2)) then
        sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_1_a_2;
        sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_1_a_1;
    else
        sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_1_a_1;
        sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2, sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1 > sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2)) then
        sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2;
        sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1;
        sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_12_a_1 <= sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_13_a_1 <= sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2, sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1 > sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2)) then
        sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2;
        sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1;
        sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_LO_SORT_MERGE_HI_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_14_a_1 <= sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_15_a_1 <= sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1 <= x_list(16);

-- Combinatorial logic 

sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2 <= x_list(17);

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_LO_SORT_LO_SORT_MERGE_COMP_0_LOGIC: process (sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2, sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1 > sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2)) then
        sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2;
        sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1;
        sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_LO_SORT_LO_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_1_a_1 <= sort_hi_sort_lo_sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1 <= x_list(18);

-- Combinatorial logic 

sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2 <= x_list(19);

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_LO_SORT_HI_SORT_MERGE_COMP_0_LOGIC: process (sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2, sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1 > sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2)) then
        sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2;
        sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1;
        sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_LO_SORT_HI_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_1_a_2 <= sort_hi_sort_lo_sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_LO_SORT_MERGE_COMP_0_LOGIC: process (sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2, sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1 > sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2)) then
        sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2;
        sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1;
        sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_LO_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_LO_SORT_MERGE_COMP_1_LOGIC: process (sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_1_a_2, sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_1_a_1 > sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_1_a_2)) then
        sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_1_a_2;
        sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_1_a_1;
    else
        sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_1_a_1;
        sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_LO_SORT_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_LO_SORT_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2, sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 > sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2)) then
        sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2;
        sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1;
        sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_LO_SORT_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_lo_sort_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_lo_sort_merge_comp_comp_1_a_1 <= sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_LO_SORT_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2, sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 > sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2)) then
        sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2;
        sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1;
        sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_LO_SORT_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_lo_sort_merge_comp_comp_2_a_1 <= sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_lo_sort_merge_comp_comp_3_a_1 <= sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1 <= x_list(20);

-- Combinatorial logic 

sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2 <= x_list(21);

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_HI_SORT_LO_SORT_MERGE_COMP_0_LOGIC: process (sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2, sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1 > sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2)) then
        sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2;
        sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1;
        sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_HI_SORT_LO_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_1_a_1 <= sort_hi_sort_lo_sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1 <= x_list(22);

-- Combinatorial logic 

sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2 <= x_list(23);

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_HI_SORT_HI_SORT_MERGE_COMP_0_LOGIC: process (sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2, sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1 > sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2)) then
        sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2;
        sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1;
        sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_HI_SORT_HI_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_1_a_2 <= sort_hi_sort_lo_sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_HI_SORT_MERGE_COMP_0_LOGIC: process (sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2, sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1 > sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2)) then
        sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2;
        sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1;
        sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_HI_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_HI_SORT_MERGE_COMP_1_LOGIC: process (sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_1_a_2, sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_1_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_1_a_1 > sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_1_a_2)) then
        sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_1_a_2;
        sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_1_a_1;
    else
        sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_1_a_1;
        sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_HI_SORT_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_HI_SORT_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2, sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 > sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2)) then
        sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2;
        sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1;
        sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_HI_SORT_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_lo_sort_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_lo_sort_merge_comp_comp_1_a_2 <= sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_HI_SORT_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2, sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 > sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2)) then
        sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2;
        sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1;
        sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_HI_SORT_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_lo_sort_merge_comp_comp_2_a_2 <= sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_lo_sort_merge_comp_comp_3_a_2 <= sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_COMP_0_LOGIC: process (sort_hi_sort_lo_sort_merge_comp_comp_0_a_2, sort_hi_sort_lo_sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_lo_sort_merge_comp_comp_0_a_1 > sort_hi_sort_lo_sort_merge_comp_comp_0_a_2)) then
        sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_merge_comp_comp_0_a_2;
        sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_merge_comp_comp_0_a_1;
        sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_COMP_1_LOGIC: process (sort_hi_sort_lo_sort_merge_comp_comp_1_a_2, sort_hi_sort_lo_sort_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_lo_sort_merge_comp_comp_1_a_1 > sort_hi_sort_lo_sort_merge_comp_comp_1_a_2)) then
        sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_1_a_1 <= sort_hi_sort_lo_sort_merge_comp_comp_1_a_2;
        sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_1_a_1 <= sort_hi_sort_lo_sort_merge_comp_comp_1_a_1;
    else
        sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_1_a_1 <= sort_hi_sort_lo_sort_merge_comp_comp_1_a_1;
        sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_1_a_1 <= sort_hi_sort_lo_sort_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_COMP_2_LOGIC: process (sort_hi_sort_lo_sort_merge_comp_comp_2_a_2, sort_hi_sort_lo_sort_merge_comp_comp_2_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_lo_sort_merge_comp_comp_2_a_1 > sort_hi_sort_lo_sort_merge_comp_comp_2_a_2)) then
        sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_merge_comp_comp_2_a_2;
        sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_merge_comp_comp_2_a_1;
    else
        sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_merge_comp_comp_2_a_1;
        sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_merge_comp_comp_2_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_COMP_2_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_COMP_3_LOGIC: process (sort_hi_sort_lo_sort_merge_comp_comp_3_a_2, sort_hi_sort_lo_sort_merge_comp_comp_3_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_lo_sort_merge_comp_comp_3_a_1 > sort_hi_sort_lo_sort_merge_comp_comp_3_a_2)) then
        sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_1_a_2 <= sort_hi_sort_lo_sort_merge_comp_comp_3_a_2;
        sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_1_a_2 <= sort_hi_sort_lo_sort_merge_comp_comp_3_a_1;
    else
        sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_1_a_2 <= sort_hi_sort_lo_sort_merge_comp_comp_3_a_1;
        sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_1_a_2 <= sort_hi_sort_lo_sort_merge_comp_comp_3_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_COMP_3_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2, sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 > sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2)) then
        sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2;
        sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1;
        sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_LO_MERGE_COMP_1_LOGIC: process (sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_1_a_2, sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_1_a_1 > sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_1_a_2)) then
        sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_1_a_2;
        sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_1_a_1;
    else
        sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_1_a_1;
        sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_LO_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2, sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 > sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2)) then
        sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2;
        sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1;
        sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_1_a_1 <= sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2, sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 > sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2)) then
        sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2;
        sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1;
        sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_2_a_1 <= sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_3_a_1 <= sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2, sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 > sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2)) then
        sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2;
        sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1;
        sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_HI_MERGE_COMP_1_LOGIC: process (sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_1_a_2, sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_1_a_1 > sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_1_a_2)) then
        sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_1_a_2;
        sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_1_a_1;
    else
        sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_1_a_1;
        sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_HI_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2, sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 > sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2)) then
        sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2;
        sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1;
        sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_4_a_1 <= sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_5_a_1 <= sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2, sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 > sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2)) then
        sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2;
        sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1;
        sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_LO_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_6_a_1 <= sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_7_a_1 <= sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1 <= x_list(24);

-- Combinatorial logic 

sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2 <= x_list(25);

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_LO_SORT_LO_SORT_MERGE_COMP_0_LOGIC: process (sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2, sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1 > sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2)) then
        sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2;
        sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_1;
        sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_LO_SORT_LO_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_1_a_1 <= sort_hi_sort_hi_sort_lo_sort_lo_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1 <= x_list(26);

-- Combinatorial logic 

sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2 <= x_list(27);

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_LO_SORT_HI_SORT_MERGE_COMP_0_LOGIC: process (sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2, sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1 > sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2)) then
        sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2;
        sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_1;
        sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_LO_SORT_HI_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_1_a_2 <= sort_hi_sort_hi_sort_lo_sort_hi_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_LO_SORT_MERGE_COMP_0_LOGIC: process (sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2, sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1 > sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2)) then
        sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2;
        sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1;
        sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_LO_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_LO_SORT_MERGE_COMP_1_LOGIC: process (sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_1_a_2, sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_1_a_1 > sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_1_a_2)) then
        sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_1_a_2;
        sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_1_a_1;
    else
        sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_1_a_1;
        sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_LO_SORT_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_LO_SORT_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2, sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1 > sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2)) then
        sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2;
        sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_1;
        sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_LO_SORT_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_hi_sort_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_hi_sort_merge_comp_comp_1_a_1 <= sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_LO_SORT_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2, sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1 > sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2)) then
        sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2;
        sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_1;
        sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_LO_SORT_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_hi_sort_merge_comp_comp_2_a_1 <= sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_hi_sort_merge_comp_comp_3_a_1 <= sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1 <= x_list(28);

-- Combinatorial logic 

sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2 <= x_list(29);

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_HI_SORT_LO_SORT_MERGE_COMP_0_LOGIC: process (sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2, sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1 > sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2)) then
        sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2;
        sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_1;
        sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_HI_SORT_LO_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_1_a_1 <= sort_hi_sort_hi_sort_hi_sort_lo_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1 <= x_list(30);

-- Combinatorial logic 

sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2 <= x_list(31);

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_HI_SORT_HI_SORT_MERGE_COMP_0_LOGIC: process (sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2, sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1 > sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2)) then
        sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2;
        sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1;
        sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_HI_SORT_HI_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_1_a_2 <= sort_hi_sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_HI_SORT_MERGE_COMP_0_LOGIC: process (sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2, sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1 > sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2)) then
        sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2;
        sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_1;
        sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_HI_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_HI_SORT_MERGE_COMP_1_LOGIC: process (sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_1_a_2, sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_1_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_1_a_1 > sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_1_a_2)) then
        sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_1_a_2;
        sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_1_a_1;
    else
        sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_1_a_1;
        sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_hi_sort_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_HI_SORT_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_HI_SORT_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2, sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 > sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2)) then
        sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2;
        sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1;
        sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_HI_SORT_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_hi_sort_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_hi_sort_merge_comp_comp_1_a_2 <= sort_hi_sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_HI_SORT_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2, sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 > sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2)) then
        sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2;
        sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1;
        sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_HI_SORT_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_hi_sort_merge_comp_comp_2_a_2 <= sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_hi_sort_merge_comp_comp_3_a_2 <= sort_hi_sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_COMP_0_LOGIC: process (sort_hi_sort_hi_sort_merge_comp_comp_0_a_2, sort_hi_sort_hi_sort_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_hi_sort_merge_comp_comp_0_a_1 > sort_hi_sort_hi_sort_merge_comp_comp_0_a_2)) then
        sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_merge_comp_comp_0_a_2;
        sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_merge_comp_comp_0_a_1;
        sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_COMP_1_LOGIC: process (sort_hi_sort_hi_sort_merge_comp_comp_1_a_2, sort_hi_sort_hi_sort_merge_comp_comp_1_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_hi_sort_merge_comp_comp_1_a_1 > sort_hi_sort_hi_sort_merge_comp_comp_1_a_2)) then
        sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_1_a_1 <= sort_hi_sort_hi_sort_merge_comp_comp_1_a_2;
        sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_1_a_1 <= sort_hi_sort_hi_sort_merge_comp_comp_1_a_1;
    else
        sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_1_a_1 <= sort_hi_sort_hi_sort_merge_comp_comp_1_a_1;
        sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_1_a_1 <= sort_hi_sort_hi_sort_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_COMP_2_LOGIC: process (sort_hi_sort_hi_sort_merge_comp_comp_2_a_2, sort_hi_sort_hi_sort_merge_comp_comp_2_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_hi_sort_merge_comp_comp_2_a_1 > sort_hi_sort_hi_sort_merge_comp_comp_2_a_2)) then
        sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_merge_comp_comp_2_a_2;
        sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_merge_comp_comp_2_a_1;
    else
        sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_merge_comp_comp_2_a_1;
        sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_merge_comp_comp_2_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_COMP_2_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_COMP_3_LOGIC: process (sort_hi_sort_hi_sort_merge_comp_comp_3_a_2, sort_hi_sort_hi_sort_merge_comp_comp_3_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_hi_sort_merge_comp_comp_3_a_1 > sort_hi_sort_hi_sort_merge_comp_comp_3_a_2)) then
        sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_1_a_2 <= sort_hi_sort_hi_sort_merge_comp_comp_3_a_2;
        sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_1_a_2 <= sort_hi_sort_hi_sort_merge_comp_comp_3_a_1;
    else
        sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_1_a_2 <= sort_hi_sort_hi_sort_merge_comp_comp_3_a_1;
        sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_1_a_2 <= sort_hi_sort_hi_sort_merge_comp_comp_3_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_COMP_3_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2, sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 > sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2)) then
        sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2;
        sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_1;
        sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_LO_MERGE_COMP_1_LOGIC: process (sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_1_a_2, sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_1_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_1_a_1 > sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_1_a_2)) then
        sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_1_a_2;
        sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_1_a_1;
    else
        sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_1_a_1;
        sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_merge_lo_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_LO_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2, sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 > sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2)) then
        sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2;
        sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1;
        sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_1_a_2 <= sort_hi_sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2, sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 > sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2)) then
        sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2;
        sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1;
        sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_2_a_2 <= sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_3_a_2 <= sort_hi_sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2, sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 > sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2)) then
        sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2;
        sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_1;
        sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_HI_MERGE_COMP_1_LOGIC: process (sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_1_a_2, sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_1_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_1_a_1 > sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_1_a_2)) then
        sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_1_a_2;
        sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_1_a_1;
    else
        sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_1_a_1;
        sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_hi_sort_merge_hi_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_HI_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2, sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 > sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2)) then
        sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2;
        sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1;
        sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_4_a_2 <= sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_5_a_2 <= sort_hi_sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2, sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 > sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2)) then
        sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2;
        sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1;
        sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_HI_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_6_a_2 <= sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_hi_sort_merge_comp_comp_7_a_2 <= sort_hi_sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_COMP_0_LOGIC: process (sort_hi_sort_merge_comp_comp_0_a_2, sort_hi_sort_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_comp_comp_0_a_1 > sort_hi_sort_merge_comp_comp_0_a_2)) then
        sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_comp_comp_0_a_2;
        sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_comp_comp_0_a_1;
        sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_COMP_1_LOGIC: process (sort_hi_sort_merge_comp_comp_1_a_2, sort_hi_sort_merge_comp_comp_1_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_comp_comp_1_a_1 > sort_hi_sort_merge_comp_comp_1_a_2)) then
        sort_hi_sort_merge_lo_merge_comp_comp_1_a_1 <= sort_hi_sort_merge_comp_comp_1_a_2;
        sort_hi_sort_merge_hi_merge_comp_comp_1_a_1 <= sort_hi_sort_merge_comp_comp_1_a_1;
    else
        sort_hi_sort_merge_lo_merge_comp_comp_1_a_1 <= sort_hi_sort_merge_comp_comp_1_a_1;
        sort_hi_sort_merge_hi_merge_comp_comp_1_a_1 <= sort_hi_sort_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_COMP_2_LOGIC: process (sort_hi_sort_merge_comp_comp_2_a_2, sort_hi_sort_merge_comp_comp_2_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_comp_comp_2_a_1 > sort_hi_sort_merge_comp_comp_2_a_2)) then
        sort_hi_sort_merge_lo_merge_comp_comp_2_a_1 <= sort_hi_sort_merge_comp_comp_2_a_2;
        sort_hi_sort_merge_hi_merge_comp_comp_2_a_1 <= sort_hi_sort_merge_comp_comp_2_a_1;
    else
        sort_hi_sort_merge_lo_merge_comp_comp_2_a_1 <= sort_hi_sort_merge_comp_comp_2_a_1;
        sort_hi_sort_merge_hi_merge_comp_comp_2_a_1 <= sort_hi_sort_merge_comp_comp_2_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_COMP_2_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_COMP_3_LOGIC: process (sort_hi_sort_merge_comp_comp_3_a_2, sort_hi_sort_merge_comp_comp_3_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_comp_comp_3_a_1 > sort_hi_sort_merge_comp_comp_3_a_2)) then
        sort_hi_sort_merge_lo_merge_comp_comp_3_a_1 <= sort_hi_sort_merge_comp_comp_3_a_2;
        sort_hi_sort_merge_hi_merge_comp_comp_3_a_1 <= sort_hi_sort_merge_comp_comp_3_a_1;
    else
        sort_hi_sort_merge_lo_merge_comp_comp_3_a_1 <= sort_hi_sort_merge_comp_comp_3_a_1;
        sort_hi_sort_merge_hi_merge_comp_comp_3_a_1 <= sort_hi_sort_merge_comp_comp_3_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_COMP_3_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_COMP_4_LOGIC: process (sort_hi_sort_merge_comp_comp_4_a_2, sort_hi_sort_merge_comp_comp_4_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_comp_comp_4_a_1 > sort_hi_sort_merge_comp_comp_4_a_2)) then
        sort_hi_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_comp_comp_4_a_2;
        sort_hi_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_comp_comp_4_a_1;
    else
        sort_hi_sort_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_comp_comp_4_a_1;
        sort_hi_sort_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_comp_comp_4_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_COMP_4_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_COMP_5_LOGIC: process (sort_hi_sort_merge_comp_comp_5_a_2, sort_hi_sort_merge_comp_comp_5_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_comp_comp_5_a_1 > sort_hi_sort_merge_comp_comp_5_a_2)) then
        sort_hi_sort_merge_lo_merge_comp_comp_1_a_2 <= sort_hi_sort_merge_comp_comp_5_a_2;
        sort_hi_sort_merge_hi_merge_comp_comp_1_a_2 <= sort_hi_sort_merge_comp_comp_5_a_1;
    else
        sort_hi_sort_merge_lo_merge_comp_comp_1_a_2 <= sort_hi_sort_merge_comp_comp_5_a_1;
        sort_hi_sort_merge_hi_merge_comp_comp_1_a_2 <= sort_hi_sort_merge_comp_comp_5_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_COMP_5_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_COMP_6_LOGIC: process (sort_hi_sort_merge_comp_comp_6_a_2, sort_hi_sort_merge_comp_comp_6_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_comp_comp_6_a_1 > sort_hi_sort_merge_comp_comp_6_a_2)) then
        sort_hi_sort_merge_lo_merge_comp_comp_2_a_2 <= sort_hi_sort_merge_comp_comp_6_a_2;
        sort_hi_sort_merge_hi_merge_comp_comp_2_a_2 <= sort_hi_sort_merge_comp_comp_6_a_1;
    else
        sort_hi_sort_merge_lo_merge_comp_comp_2_a_2 <= sort_hi_sort_merge_comp_comp_6_a_1;
        sort_hi_sort_merge_hi_merge_comp_comp_2_a_2 <= sort_hi_sort_merge_comp_comp_6_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_COMP_6_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_COMP_7_LOGIC: process (sort_hi_sort_merge_comp_comp_7_a_2, sort_hi_sort_merge_comp_comp_7_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_comp_comp_7_a_1 > sort_hi_sort_merge_comp_comp_7_a_2)) then
        sort_hi_sort_merge_lo_merge_comp_comp_3_a_2 <= sort_hi_sort_merge_comp_comp_7_a_2;
        sort_hi_sort_merge_hi_merge_comp_comp_3_a_2 <= sort_hi_sort_merge_comp_comp_7_a_1;
    else
        sort_hi_sort_merge_lo_merge_comp_comp_3_a_2 <= sort_hi_sort_merge_comp_comp_7_a_1;
        sort_hi_sort_merge_hi_merge_comp_comp_3_a_2 <= sort_hi_sort_merge_comp_comp_7_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_COMP_7_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_hi_sort_merge_lo_merge_comp_comp_0_a_2, sort_hi_sort_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_lo_merge_comp_comp_0_a_1 > sort_hi_sort_merge_lo_merge_comp_comp_0_a_2)) then
        sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_lo_merge_comp_comp_0_a_2;
        sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_lo_merge_comp_comp_0_a_1;
        sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_COMP_1_LOGIC: process (sort_hi_sort_merge_lo_merge_comp_comp_1_a_2, sort_hi_sort_merge_lo_merge_comp_comp_1_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_lo_merge_comp_comp_1_a_1 > sort_hi_sort_merge_lo_merge_comp_comp_1_a_2)) then
        sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_1_a_1 <= sort_hi_sort_merge_lo_merge_comp_comp_1_a_2;
        sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_1_a_1 <= sort_hi_sort_merge_lo_merge_comp_comp_1_a_1;
    else
        sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_1_a_1 <= sort_hi_sort_merge_lo_merge_comp_comp_1_a_1;
        sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_1_a_1 <= sort_hi_sort_merge_lo_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_COMP_2_LOGIC: process (sort_hi_sort_merge_lo_merge_comp_comp_2_a_2, sort_hi_sort_merge_lo_merge_comp_comp_2_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_lo_merge_comp_comp_2_a_1 > sort_hi_sort_merge_lo_merge_comp_comp_2_a_2)) then
        sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_lo_merge_comp_comp_2_a_2;
        sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_lo_merge_comp_comp_2_a_1;
    else
        sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_lo_merge_comp_comp_2_a_1;
        sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_lo_merge_comp_comp_2_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_COMP_2_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_COMP_3_LOGIC: process (sort_hi_sort_merge_lo_merge_comp_comp_3_a_2, sort_hi_sort_merge_lo_merge_comp_comp_3_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_lo_merge_comp_comp_3_a_1 > sort_hi_sort_merge_lo_merge_comp_comp_3_a_2)) then
        sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_1_a_2 <= sort_hi_sort_merge_lo_merge_comp_comp_3_a_2;
        sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_1_a_2 <= sort_hi_sort_merge_lo_merge_comp_comp_3_a_1;
    else
        sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_1_a_2 <= sort_hi_sort_merge_lo_merge_comp_comp_3_a_1;
        sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_1_a_2 <= sort_hi_sort_merge_lo_merge_comp_comp_3_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_COMP_3_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2, sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 > sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2)) then
        sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2;
        sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_1;
        sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_1_LOGIC: process (sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_1_a_2, sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_1_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_1_a_1 > sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_1_a_2)) then
        sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_1_a_2;
        sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_1_a_1;
    else
        sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_1_a_1;
        sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_lo_merge_lo_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2, sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1 > sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2)) then
        sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2;
        sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1;
        sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_1_a_2 <= sort_hi_sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2, sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1 > sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2)) then
        sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2;
        sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1;
        sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_2_a_2 <= sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_3_a_2 <= sort_hi_sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2, sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 > sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2)) then
        sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2;
        sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_1;
        sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_1_LOGIC: process (sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_1_a_2, sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_1_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_1_a_1 > sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_1_a_2)) then
        sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_1_a_2;
        sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_1_a_1;
    else
        sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_1_a_1;
        sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_lo_merge_hi_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2, sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1 > sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2)) then
        sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2;
        sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1;
        sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_4_a_2 <= sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_5_a_2 <= sort_hi_sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2, sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1 > sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2)) then
        sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2;
        sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1;
        sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_LO_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_6_a_2 <= sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_7_a_2 <= sort_hi_sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_hi_sort_merge_hi_merge_comp_comp_0_a_2, sort_hi_sort_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_hi_merge_comp_comp_0_a_1 > sort_hi_sort_merge_hi_merge_comp_comp_0_a_2)) then
        sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_hi_merge_comp_comp_0_a_2;
        sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_hi_merge_comp_comp_0_a_1;
        sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_COMP_1_LOGIC: process (sort_hi_sort_merge_hi_merge_comp_comp_1_a_2, sort_hi_sort_merge_hi_merge_comp_comp_1_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_hi_merge_comp_comp_1_a_1 > sort_hi_sort_merge_hi_merge_comp_comp_1_a_2)) then
        sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_1_a_1 <= sort_hi_sort_merge_hi_merge_comp_comp_1_a_2;
        sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_1_a_1 <= sort_hi_sort_merge_hi_merge_comp_comp_1_a_1;
    else
        sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_1_a_1 <= sort_hi_sort_merge_hi_merge_comp_comp_1_a_1;
        sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_1_a_1 <= sort_hi_sort_merge_hi_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_COMP_2_LOGIC: process (sort_hi_sort_merge_hi_merge_comp_comp_2_a_2, sort_hi_sort_merge_hi_merge_comp_comp_2_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_hi_merge_comp_comp_2_a_1 > sort_hi_sort_merge_hi_merge_comp_comp_2_a_2)) then
        sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_hi_merge_comp_comp_2_a_2;
        sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_hi_merge_comp_comp_2_a_1;
    else
        sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_hi_merge_comp_comp_2_a_1;
        sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_hi_merge_comp_comp_2_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_COMP_2_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_COMP_3_LOGIC: process (sort_hi_sort_merge_hi_merge_comp_comp_3_a_2, sort_hi_sort_merge_hi_merge_comp_comp_3_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_hi_merge_comp_comp_3_a_1 > sort_hi_sort_merge_hi_merge_comp_comp_3_a_2)) then
        sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_1_a_2 <= sort_hi_sort_merge_hi_merge_comp_comp_3_a_2;
        sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_1_a_2 <= sort_hi_sort_merge_hi_merge_comp_comp_3_a_1;
    else
        sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_1_a_2 <= sort_hi_sort_merge_hi_merge_comp_comp_3_a_1;
        sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_1_a_2 <= sort_hi_sort_merge_hi_merge_comp_comp_3_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_COMP_3_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2, sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 > sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2)) then
        sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2;
        sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_1;
        sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_1_LOGIC: process (sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_1_a_2, sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_1_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_1_a_1 > sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_1_a_2)) then
        sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_1_a_2;
        sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_1_a_1;
    else
        sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_1_a_1;
        sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_hi_merge_lo_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2, sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1 > sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2)) then
        sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2;
        sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1;
        sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_8_a_2 <= sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_9_a_2 <= sort_hi_sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2, sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1 > sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2)) then
        sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2;
        sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1;
        sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_10_a_2 <= sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_11_a_2 <= sort_hi_sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2, sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 > sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2)) then
        sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2;
        sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_1;
        sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_1_LOGIC: process (sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_1_a_2, sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_1_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_1_a_1 > sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_1_a_2)) then
        sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_1_a_2;
        sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_1_a_1;
    else
        sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_1_a_1;
        sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_hi_sort_merge_hi_merge_hi_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2, sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1 > sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2)) then
        sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2;
        sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1;
        sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_12_a_2 <= sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_13_a_2 <= sort_hi_sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2, sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('0' = stdl(sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1 > sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2)) then
        sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2;
        sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1;
        sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_HI_SORT_MERGE_HI_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

sort_merge_comp_comp_14_a_2 <= sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

sort_merge_comp_comp_15_a_2 <= sort_hi_sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_COMP_0_LOGIC: process (sort_merge_comp_comp_0_a_2, sort_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_0_a_1 > sort_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_COMP_1_LOGIC: process (sort_merge_comp_comp_1_a_2, sort_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_1_a_1 > sort_merge_comp_comp_1_a_2)) then
        sort_merge_lo_merge_comp_comp_1_a_1 <= sort_merge_comp_comp_1_a_2;
        sort_merge_hi_merge_comp_comp_1_a_1 <= sort_merge_comp_comp_1_a_1;
    else
        sort_merge_lo_merge_comp_comp_1_a_1 <= sort_merge_comp_comp_1_a_1;
        sort_merge_hi_merge_comp_comp_1_a_1 <= sort_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_COMP_2_LOGIC: process (sort_merge_comp_comp_2_a_2, sort_merge_comp_comp_2_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_2_a_1 > sort_merge_comp_comp_2_a_2)) then
        sort_merge_lo_merge_comp_comp_2_a_1 <= sort_merge_comp_comp_2_a_2;
        sort_merge_hi_merge_comp_comp_2_a_1 <= sort_merge_comp_comp_2_a_1;
    else
        sort_merge_lo_merge_comp_comp_2_a_1 <= sort_merge_comp_comp_2_a_1;
        sort_merge_hi_merge_comp_comp_2_a_1 <= sort_merge_comp_comp_2_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_COMP_2_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_COMP_3_LOGIC: process (sort_merge_comp_comp_3_a_2, sort_merge_comp_comp_3_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_3_a_1 > sort_merge_comp_comp_3_a_2)) then
        sort_merge_lo_merge_comp_comp_3_a_1 <= sort_merge_comp_comp_3_a_2;
        sort_merge_hi_merge_comp_comp_3_a_1 <= sort_merge_comp_comp_3_a_1;
    else
        sort_merge_lo_merge_comp_comp_3_a_1 <= sort_merge_comp_comp_3_a_1;
        sort_merge_hi_merge_comp_comp_3_a_1 <= sort_merge_comp_comp_3_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_COMP_3_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_COMP_4_LOGIC: process (sort_merge_comp_comp_4_a_2, sort_merge_comp_comp_4_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_4_a_1 > sort_merge_comp_comp_4_a_2)) then
        sort_merge_lo_merge_comp_comp_4_a_1 <= sort_merge_comp_comp_4_a_2;
        sort_merge_hi_merge_comp_comp_4_a_1 <= sort_merge_comp_comp_4_a_1;
    else
        sort_merge_lo_merge_comp_comp_4_a_1 <= sort_merge_comp_comp_4_a_1;
        sort_merge_hi_merge_comp_comp_4_a_1 <= sort_merge_comp_comp_4_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_COMP_4_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_COMP_5_LOGIC: process (sort_merge_comp_comp_5_a_2, sort_merge_comp_comp_5_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_5_a_1 > sort_merge_comp_comp_5_a_2)) then
        sort_merge_lo_merge_comp_comp_5_a_1 <= sort_merge_comp_comp_5_a_2;
        sort_merge_hi_merge_comp_comp_5_a_1 <= sort_merge_comp_comp_5_a_1;
    else
        sort_merge_lo_merge_comp_comp_5_a_1 <= sort_merge_comp_comp_5_a_1;
        sort_merge_hi_merge_comp_comp_5_a_1 <= sort_merge_comp_comp_5_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_COMP_5_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_COMP_6_LOGIC: process (sort_merge_comp_comp_6_a_2, sort_merge_comp_comp_6_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_6_a_1 > sort_merge_comp_comp_6_a_2)) then
        sort_merge_lo_merge_comp_comp_6_a_1 <= sort_merge_comp_comp_6_a_2;
        sort_merge_hi_merge_comp_comp_6_a_1 <= sort_merge_comp_comp_6_a_1;
    else
        sort_merge_lo_merge_comp_comp_6_a_1 <= sort_merge_comp_comp_6_a_1;
        sort_merge_hi_merge_comp_comp_6_a_1 <= sort_merge_comp_comp_6_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_COMP_6_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_COMP_7_LOGIC: process (sort_merge_comp_comp_7_a_2, sort_merge_comp_comp_7_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_7_a_1 > sort_merge_comp_comp_7_a_2)) then
        sort_merge_lo_merge_comp_comp_7_a_1 <= sort_merge_comp_comp_7_a_2;
        sort_merge_hi_merge_comp_comp_7_a_1 <= sort_merge_comp_comp_7_a_1;
    else
        sort_merge_lo_merge_comp_comp_7_a_1 <= sort_merge_comp_comp_7_a_1;
        sort_merge_hi_merge_comp_comp_7_a_1 <= sort_merge_comp_comp_7_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_COMP_7_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_COMP_8_LOGIC: process (sort_merge_comp_comp_8_a_2, sort_merge_comp_comp_8_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_8_a_1 > sort_merge_comp_comp_8_a_2)) then
        sort_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_comp_comp_8_a_2;
        sort_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_comp_comp_8_a_1;
    else
        sort_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_comp_comp_8_a_1;
        sort_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_comp_comp_8_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_COMP_8_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_COMP_9_LOGIC: process (sort_merge_comp_comp_9_a_2, sort_merge_comp_comp_9_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_9_a_1 > sort_merge_comp_comp_9_a_2)) then
        sort_merge_lo_merge_comp_comp_1_a_2 <= sort_merge_comp_comp_9_a_2;
        sort_merge_hi_merge_comp_comp_1_a_2 <= sort_merge_comp_comp_9_a_1;
    else
        sort_merge_lo_merge_comp_comp_1_a_2 <= sort_merge_comp_comp_9_a_1;
        sort_merge_hi_merge_comp_comp_1_a_2 <= sort_merge_comp_comp_9_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_COMP_9_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_COMP_10_LOGIC: process (sort_merge_comp_comp_10_a_2, sort_merge_comp_comp_10_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_10_a_1 > sort_merge_comp_comp_10_a_2)) then
        sort_merge_lo_merge_comp_comp_2_a_2 <= sort_merge_comp_comp_10_a_2;
        sort_merge_hi_merge_comp_comp_2_a_2 <= sort_merge_comp_comp_10_a_1;
    else
        sort_merge_lo_merge_comp_comp_2_a_2 <= sort_merge_comp_comp_10_a_1;
        sort_merge_hi_merge_comp_comp_2_a_2 <= sort_merge_comp_comp_10_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_COMP_10_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_COMP_11_LOGIC: process (sort_merge_comp_comp_11_a_2, sort_merge_comp_comp_11_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_11_a_1 > sort_merge_comp_comp_11_a_2)) then
        sort_merge_lo_merge_comp_comp_3_a_2 <= sort_merge_comp_comp_11_a_2;
        sort_merge_hi_merge_comp_comp_3_a_2 <= sort_merge_comp_comp_11_a_1;
    else
        sort_merge_lo_merge_comp_comp_3_a_2 <= sort_merge_comp_comp_11_a_1;
        sort_merge_hi_merge_comp_comp_3_a_2 <= sort_merge_comp_comp_11_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_COMP_11_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_COMP_12_LOGIC: process (sort_merge_comp_comp_12_a_2, sort_merge_comp_comp_12_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_12_a_1 > sort_merge_comp_comp_12_a_2)) then
        sort_merge_lo_merge_comp_comp_4_a_2 <= sort_merge_comp_comp_12_a_2;
        sort_merge_hi_merge_comp_comp_4_a_2 <= sort_merge_comp_comp_12_a_1;
    else
        sort_merge_lo_merge_comp_comp_4_a_2 <= sort_merge_comp_comp_12_a_1;
        sort_merge_hi_merge_comp_comp_4_a_2 <= sort_merge_comp_comp_12_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_COMP_12_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_COMP_13_LOGIC: process (sort_merge_comp_comp_13_a_2, sort_merge_comp_comp_13_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_13_a_1 > sort_merge_comp_comp_13_a_2)) then
        sort_merge_lo_merge_comp_comp_5_a_2 <= sort_merge_comp_comp_13_a_2;
        sort_merge_hi_merge_comp_comp_5_a_2 <= sort_merge_comp_comp_13_a_1;
    else
        sort_merge_lo_merge_comp_comp_5_a_2 <= sort_merge_comp_comp_13_a_1;
        sort_merge_hi_merge_comp_comp_5_a_2 <= sort_merge_comp_comp_13_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_COMP_13_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_COMP_14_LOGIC: process (sort_merge_comp_comp_14_a_2, sort_merge_comp_comp_14_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_14_a_1 > sort_merge_comp_comp_14_a_2)) then
        sort_merge_lo_merge_comp_comp_6_a_2 <= sort_merge_comp_comp_14_a_2;
        sort_merge_hi_merge_comp_comp_6_a_2 <= sort_merge_comp_comp_14_a_1;
    else
        sort_merge_lo_merge_comp_comp_6_a_2 <= sort_merge_comp_comp_14_a_1;
        sort_merge_hi_merge_comp_comp_6_a_2 <= sort_merge_comp_comp_14_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_COMP_14_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_COMP_15_LOGIC: process (sort_merge_comp_comp_15_a_2, sort_merge_comp_comp_15_a_1) is
begin
    if ('1' = stdl(sort_merge_comp_comp_15_a_1 > sort_merge_comp_comp_15_a_2)) then
        sort_merge_lo_merge_comp_comp_7_a_2 <= sort_merge_comp_comp_15_a_2;
        sort_merge_hi_merge_comp_comp_7_a_2 <= sort_merge_comp_comp_15_a_1;
    else
        sort_merge_lo_merge_comp_comp_7_a_2 <= sort_merge_comp_comp_15_a_1;
        sort_merge_hi_merge_comp_comp_7_a_2 <= sort_merge_comp_comp_15_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_COMP_15_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_merge_lo_merge_comp_comp_0_a_2, sort_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_comp_comp_0_a_1 > sort_merge_lo_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_comp_comp_0_a_2;
        sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_comp_comp_0_a_1;
        sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_COMP_1_LOGIC: process (sort_merge_lo_merge_comp_comp_1_a_2, sort_merge_lo_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_comp_comp_1_a_1 > sort_merge_lo_merge_comp_comp_1_a_2)) then
        sort_merge_lo_merge_lo_merge_comp_comp_1_a_1 <= sort_merge_lo_merge_comp_comp_1_a_2;
        sort_merge_lo_merge_hi_merge_comp_comp_1_a_1 <= sort_merge_lo_merge_comp_comp_1_a_1;
    else
        sort_merge_lo_merge_lo_merge_comp_comp_1_a_1 <= sort_merge_lo_merge_comp_comp_1_a_1;
        sort_merge_lo_merge_hi_merge_comp_comp_1_a_1 <= sort_merge_lo_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_COMP_2_LOGIC: process (sort_merge_lo_merge_comp_comp_2_a_2, sort_merge_lo_merge_comp_comp_2_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_comp_comp_2_a_1 > sort_merge_lo_merge_comp_comp_2_a_2)) then
        sort_merge_lo_merge_lo_merge_comp_comp_2_a_1 <= sort_merge_lo_merge_comp_comp_2_a_2;
        sort_merge_lo_merge_hi_merge_comp_comp_2_a_1 <= sort_merge_lo_merge_comp_comp_2_a_1;
    else
        sort_merge_lo_merge_lo_merge_comp_comp_2_a_1 <= sort_merge_lo_merge_comp_comp_2_a_1;
        sort_merge_lo_merge_hi_merge_comp_comp_2_a_1 <= sort_merge_lo_merge_comp_comp_2_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_COMP_2_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_COMP_3_LOGIC: process (sort_merge_lo_merge_comp_comp_3_a_2, sort_merge_lo_merge_comp_comp_3_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_comp_comp_3_a_1 > sort_merge_lo_merge_comp_comp_3_a_2)) then
        sort_merge_lo_merge_lo_merge_comp_comp_3_a_1 <= sort_merge_lo_merge_comp_comp_3_a_2;
        sort_merge_lo_merge_hi_merge_comp_comp_3_a_1 <= sort_merge_lo_merge_comp_comp_3_a_1;
    else
        sort_merge_lo_merge_lo_merge_comp_comp_3_a_1 <= sort_merge_lo_merge_comp_comp_3_a_1;
        sort_merge_lo_merge_hi_merge_comp_comp_3_a_1 <= sort_merge_lo_merge_comp_comp_3_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_COMP_3_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_COMP_4_LOGIC: process (sort_merge_lo_merge_comp_comp_4_a_2, sort_merge_lo_merge_comp_comp_4_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_comp_comp_4_a_1 > sort_merge_lo_merge_comp_comp_4_a_2)) then
        sort_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_comp_comp_4_a_2;
        sort_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_comp_comp_4_a_1;
    else
        sort_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_comp_comp_4_a_1;
        sort_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_comp_comp_4_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_COMP_4_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_COMP_5_LOGIC: process (sort_merge_lo_merge_comp_comp_5_a_2, sort_merge_lo_merge_comp_comp_5_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_comp_comp_5_a_1 > sort_merge_lo_merge_comp_comp_5_a_2)) then
        sort_merge_lo_merge_lo_merge_comp_comp_1_a_2 <= sort_merge_lo_merge_comp_comp_5_a_2;
        sort_merge_lo_merge_hi_merge_comp_comp_1_a_2 <= sort_merge_lo_merge_comp_comp_5_a_1;
    else
        sort_merge_lo_merge_lo_merge_comp_comp_1_a_2 <= sort_merge_lo_merge_comp_comp_5_a_1;
        sort_merge_lo_merge_hi_merge_comp_comp_1_a_2 <= sort_merge_lo_merge_comp_comp_5_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_COMP_5_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_COMP_6_LOGIC: process (sort_merge_lo_merge_comp_comp_6_a_2, sort_merge_lo_merge_comp_comp_6_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_comp_comp_6_a_1 > sort_merge_lo_merge_comp_comp_6_a_2)) then
        sort_merge_lo_merge_lo_merge_comp_comp_2_a_2 <= sort_merge_lo_merge_comp_comp_6_a_2;
        sort_merge_lo_merge_hi_merge_comp_comp_2_a_2 <= sort_merge_lo_merge_comp_comp_6_a_1;
    else
        sort_merge_lo_merge_lo_merge_comp_comp_2_a_2 <= sort_merge_lo_merge_comp_comp_6_a_1;
        sort_merge_lo_merge_hi_merge_comp_comp_2_a_2 <= sort_merge_lo_merge_comp_comp_6_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_COMP_6_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_COMP_7_LOGIC: process (sort_merge_lo_merge_comp_comp_7_a_2, sort_merge_lo_merge_comp_comp_7_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_comp_comp_7_a_1 > sort_merge_lo_merge_comp_comp_7_a_2)) then
        sort_merge_lo_merge_lo_merge_comp_comp_3_a_2 <= sort_merge_lo_merge_comp_comp_7_a_2;
        sort_merge_lo_merge_hi_merge_comp_comp_3_a_2 <= sort_merge_lo_merge_comp_comp_7_a_1;
    else
        sort_merge_lo_merge_lo_merge_comp_comp_3_a_2 <= sort_merge_lo_merge_comp_comp_7_a_1;
        sort_merge_lo_merge_hi_merge_comp_comp_3_a_2 <= sort_merge_lo_merge_comp_comp_7_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_COMP_7_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_merge_lo_merge_lo_merge_comp_comp_0_a_2, sort_merge_lo_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_lo_merge_comp_comp_0_a_1 > sort_merge_lo_merge_lo_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_lo_merge_comp_comp_0_a_2;
        sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_lo_merge_comp_comp_0_a_1;
        sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_1_LOGIC: process (sort_merge_lo_merge_lo_merge_comp_comp_1_a_2, sort_merge_lo_merge_lo_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_lo_merge_comp_comp_1_a_1 > sort_merge_lo_merge_lo_merge_comp_comp_1_a_2)) then
        sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_1_a_1 <= sort_merge_lo_merge_lo_merge_comp_comp_1_a_2;
        sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_1_a_1 <= sort_merge_lo_merge_lo_merge_comp_comp_1_a_1;
    else
        sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_1_a_1 <= sort_merge_lo_merge_lo_merge_comp_comp_1_a_1;
        sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_1_a_1 <= sort_merge_lo_merge_lo_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_2_LOGIC: process (sort_merge_lo_merge_lo_merge_comp_comp_2_a_2, sort_merge_lo_merge_lo_merge_comp_comp_2_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_lo_merge_comp_comp_2_a_1 > sort_merge_lo_merge_lo_merge_comp_comp_2_a_2)) then
        sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_lo_merge_comp_comp_2_a_2;
        sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_lo_merge_comp_comp_2_a_1;
    else
        sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_lo_merge_comp_comp_2_a_1;
        sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_lo_merge_comp_comp_2_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_2_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_3_LOGIC: process (sort_merge_lo_merge_lo_merge_comp_comp_3_a_2, sort_merge_lo_merge_lo_merge_comp_comp_3_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_lo_merge_comp_comp_3_a_1 > sort_merge_lo_merge_lo_merge_comp_comp_3_a_2)) then
        sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_1_a_2 <= sort_merge_lo_merge_lo_merge_comp_comp_3_a_2;
        sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_1_a_2 <= sort_merge_lo_merge_lo_merge_comp_comp_3_a_1;
    else
        sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_1_a_2 <= sort_merge_lo_merge_lo_merge_comp_comp_3_a_1;
        sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_1_a_2 <= sort_merge_lo_merge_lo_merge_comp_comp_3_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_COMP_3_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2, sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1 > sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2;
        sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1;
        sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_LO_MERGE_COMP_1_LOGIC: process (sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_1_a_2, sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_1_a_1 > sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_1_a_2)) then
        sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_1_a_2;
        sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_1_a_1;
    else
        sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_1_a_1;
        sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_lo_merge_lo_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_LO_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2, sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1 > sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2;
        sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1;
        sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

y_list(0) <= sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

y_list(1) <= sort_merge_lo_merge_lo_merge_lo_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2, sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1 > sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2;
        sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1;
        sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

y_list(2) <= sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

y_list(3) <= sort_merge_lo_merge_lo_merge_lo_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2, sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1 > sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2;
        sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1;
        sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_HI_MERGE_COMP_1_LOGIC: process (sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_1_a_2, sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_1_a_1 > sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_1_a_2)) then
        sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_1_a_2;
        sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_1_a_1;
    else
        sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_1_a_1;
        sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_lo_merge_hi_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_HI_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2, sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1 > sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2;
        sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1;
        sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

y_list(4) <= sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

y_list(5) <= sort_merge_lo_merge_lo_merge_hi_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2, sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1 > sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2;
        sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1;
        sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_LO_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

y_list(6) <= sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

y_list(7) <= sort_merge_lo_merge_lo_merge_hi_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_merge_lo_merge_hi_merge_comp_comp_0_a_2, sort_merge_lo_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_hi_merge_comp_comp_0_a_1 > sort_merge_lo_merge_hi_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_hi_merge_comp_comp_0_a_2;
        sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_hi_merge_comp_comp_0_a_1;
        sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_1_LOGIC: process (sort_merge_lo_merge_hi_merge_comp_comp_1_a_2, sort_merge_lo_merge_hi_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_hi_merge_comp_comp_1_a_1 > sort_merge_lo_merge_hi_merge_comp_comp_1_a_2)) then
        sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_1_a_1 <= sort_merge_lo_merge_hi_merge_comp_comp_1_a_2;
        sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_1_a_1 <= sort_merge_lo_merge_hi_merge_comp_comp_1_a_1;
    else
        sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_1_a_1 <= sort_merge_lo_merge_hi_merge_comp_comp_1_a_1;
        sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_1_a_1 <= sort_merge_lo_merge_hi_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_2_LOGIC: process (sort_merge_lo_merge_hi_merge_comp_comp_2_a_2, sort_merge_lo_merge_hi_merge_comp_comp_2_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_hi_merge_comp_comp_2_a_1 > sort_merge_lo_merge_hi_merge_comp_comp_2_a_2)) then
        sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_hi_merge_comp_comp_2_a_2;
        sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_hi_merge_comp_comp_2_a_1;
    else
        sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_hi_merge_comp_comp_2_a_1;
        sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_hi_merge_comp_comp_2_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_2_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_3_LOGIC: process (sort_merge_lo_merge_hi_merge_comp_comp_3_a_2, sort_merge_lo_merge_hi_merge_comp_comp_3_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_hi_merge_comp_comp_3_a_1 > sort_merge_lo_merge_hi_merge_comp_comp_3_a_2)) then
        sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_1_a_2 <= sort_merge_lo_merge_hi_merge_comp_comp_3_a_2;
        sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_1_a_2 <= sort_merge_lo_merge_hi_merge_comp_comp_3_a_1;
    else
        sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_1_a_2 <= sort_merge_lo_merge_hi_merge_comp_comp_3_a_1;
        sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_1_a_2 <= sort_merge_lo_merge_hi_merge_comp_comp_3_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_COMP_3_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2, sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1 > sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2;
        sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1;
        sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_LO_MERGE_COMP_1_LOGIC: process (sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_1_a_2, sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_1_a_1 > sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_1_a_2)) then
        sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_1_a_2;
        sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_1_a_1;
    else
        sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_1_a_1;
        sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_hi_merge_lo_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_LO_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2, sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1 > sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2;
        sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1;
        sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

y_list(8) <= sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

y_list(9) <= sort_merge_lo_merge_hi_merge_lo_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2, sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1 > sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2;
        sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1;
        sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

y_list(10) <= sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

y_list(11) <= sort_merge_lo_merge_hi_merge_lo_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2, sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1 > sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2;
        sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1;
        sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_HI_MERGE_COMP_1_LOGIC: process (sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_1_a_2, sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_1_a_1 > sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_1_a_2)) then
        sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_1_a_2;
        sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_1_a_1;
    else
        sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_1_a_1;
        sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_lo_merge_hi_merge_hi_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_HI_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2, sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1 > sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2;
        sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1;
        sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

y_list(12) <= sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

y_list(13) <= sort_merge_lo_merge_hi_merge_hi_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2, sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1 > sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2)) then
        sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2;
        sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1;
        sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_LO_MERGE_HI_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

y_list(14) <= sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

y_list(15) <= sort_merge_lo_merge_hi_merge_hi_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_merge_hi_merge_comp_comp_0_a_2, sort_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_comp_comp_0_a_1 > sort_merge_hi_merge_comp_comp_0_a_2)) then
        sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_COMP_1_LOGIC: process (sort_merge_hi_merge_comp_comp_1_a_2, sort_merge_hi_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_comp_comp_1_a_1 > sort_merge_hi_merge_comp_comp_1_a_2)) then
        sort_merge_hi_merge_lo_merge_comp_comp_1_a_1 <= sort_merge_hi_merge_comp_comp_1_a_2;
        sort_merge_hi_merge_hi_merge_comp_comp_1_a_1 <= sort_merge_hi_merge_comp_comp_1_a_1;
    else
        sort_merge_hi_merge_lo_merge_comp_comp_1_a_1 <= sort_merge_hi_merge_comp_comp_1_a_1;
        sort_merge_hi_merge_hi_merge_comp_comp_1_a_1 <= sort_merge_hi_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_COMP_2_LOGIC: process (sort_merge_hi_merge_comp_comp_2_a_2, sort_merge_hi_merge_comp_comp_2_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_comp_comp_2_a_1 > sort_merge_hi_merge_comp_comp_2_a_2)) then
        sort_merge_hi_merge_lo_merge_comp_comp_2_a_1 <= sort_merge_hi_merge_comp_comp_2_a_2;
        sort_merge_hi_merge_hi_merge_comp_comp_2_a_1 <= sort_merge_hi_merge_comp_comp_2_a_1;
    else
        sort_merge_hi_merge_lo_merge_comp_comp_2_a_1 <= sort_merge_hi_merge_comp_comp_2_a_1;
        sort_merge_hi_merge_hi_merge_comp_comp_2_a_1 <= sort_merge_hi_merge_comp_comp_2_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_COMP_2_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_COMP_3_LOGIC: process (sort_merge_hi_merge_comp_comp_3_a_2, sort_merge_hi_merge_comp_comp_3_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_comp_comp_3_a_1 > sort_merge_hi_merge_comp_comp_3_a_2)) then
        sort_merge_hi_merge_lo_merge_comp_comp_3_a_1 <= sort_merge_hi_merge_comp_comp_3_a_2;
        sort_merge_hi_merge_hi_merge_comp_comp_3_a_1 <= sort_merge_hi_merge_comp_comp_3_a_1;
    else
        sort_merge_hi_merge_lo_merge_comp_comp_3_a_1 <= sort_merge_hi_merge_comp_comp_3_a_1;
        sort_merge_hi_merge_hi_merge_comp_comp_3_a_1 <= sort_merge_hi_merge_comp_comp_3_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_COMP_3_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_COMP_4_LOGIC: process (sort_merge_hi_merge_comp_comp_4_a_2, sort_merge_hi_merge_comp_comp_4_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_comp_comp_4_a_1 > sort_merge_hi_merge_comp_comp_4_a_2)) then
        sort_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_comp_comp_4_a_2;
        sort_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_comp_comp_4_a_1;
    else
        sort_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_comp_comp_4_a_1;
        sort_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_comp_comp_4_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_COMP_4_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_COMP_5_LOGIC: process (sort_merge_hi_merge_comp_comp_5_a_2, sort_merge_hi_merge_comp_comp_5_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_comp_comp_5_a_1 > sort_merge_hi_merge_comp_comp_5_a_2)) then
        sort_merge_hi_merge_lo_merge_comp_comp_1_a_2 <= sort_merge_hi_merge_comp_comp_5_a_2;
        sort_merge_hi_merge_hi_merge_comp_comp_1_a_2 <= sort_merge_hi_merge_comp_comp_5_a_1;
    else
        sort_merge_hi_merge_lo_merge_comp_comp_1_a_2 <= sort_merge_hi_merge_comp_comp_5_a_1;
        sort_merge_hi_merge_hi_merge_comp_comp_1_a_2 <= sort_merge_hi_merge_comp_comp_5_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_COMP_5_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_COMP_6_LOGIC: process (sort_merge_hi_merge_comp_comp_6_a_2, sort_merge_hi_merge_comp_comp_6_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_comp_comp_6_a_1 > sort_merge_hi_merge_comp_comp_6_a_2)) then
        sort_merge_hi_merge_lo_merge_comp_comp_2_a_2 <= sort_merge_hi_merge_comp_comp_6_a_2;
        sort_merge_hi_merge_hi_merge_comp_comp_2_a_2 <= sort_merge_hi_merge_comp_comp_6_a_1;
    else
        sort_merge_hi_merge_lo_merge_comp_comp_2_a_2 <= sort_merge_hi_merge_comp_comp_6_a_1;
        sort_merge_hi_merge_hi_merge_comp_comp_2_a_2 <= sort_merge_hi_merge_comp_comp_6_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_COMP_6_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_COMP_7_LOGIC: process (sort_merge_hi_merge_comp_comp_7_a_2, sort_merge_hi_merge_comp_comp_7_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_comp_comp_7_a_1 > sort_merge_hi_merge_comp_comp_7_a_2)) then
        sort_merge_hi_merge_lo_merge_comp_comp_3_a_2 <= sort_merge_hi_merge_comp_comp_7_a_2;
        sort_merge_hi_merge_hi_merge_comp_comp_3_a_2 <= sort_merge_hi_merge_comp_comp_7_a_1;
    else
        sort_merge_hi_merge_lo_merge_comp_comp_3_a_2 <= sort_merge_hi_merge_comp_comp_7_a_1;
        sort_merge_hi_merge_hi_merge_comp_comp_3_a_2 <= sort_merge_hi_merge_comp_comp_7_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_COMP_7_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_merge_hi_merge_lo_merge_comp_comp_0_a_2, sort_merge_hi_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_lo_merge_comp_comp_0_a_1 > sort_merge_hi_merge_lo_merge_comp_comp_0_a_2)) then
        sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_lo_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_lo_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_1_LOGIC: process (sort_merge_hi_merge_lo_merge_comp_comp_1_a_2, sort_merge_hi_merge_lo_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_lo_merge_comp_comp_1_a_1 > sort_merge_hi_merge_lo_merge_comp_comp_1_a_2)) then
        sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_1_a_1 <= sort_merge_hi_merge_lo_merge_comp_comp_1_a_2;
        sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_1_a_1 <= sort_merge_hi_merge_lo_merge_comp_comp_1_a_1;
    else
        sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_1_a_1 <= sort_merge_hi_merge_lo_merge_comp_comp_1_a_1;
        sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_1_a_1 <= sort_merge_hi_merge_lo_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_2_LOGIC: process (sort_merge_hi_merge_lo_merge_comp_comp_2_a_2, sort_merge_hi_merge_lo_merge_comp_comp_2_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_lo_merge_comp_comp_2_a_1 > sort_merge_hi_merge_lo_merge_comp_comp_2_a_2)) then
        sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_lo_merge_comp_comp_2_a_2;
        sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_lo_merge_comp_comp_2_a_1;
    else
        sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_lo_merge_comp_comp_2_a_1;
        sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_lo_merge_comp_comp_2_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_2_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_3_LOGIC: process (sort_merge_hi_merge_lo_merge_comp_comp_3_a_2, sort_merge_hi_merge_lo_merge_comp_comp_3_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_lo_merge_comp_comp_3_a_1 > sort_merge_hi_merge_lo_merge_comp_comp_3_a_2)) then
        sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_1_a_2 <= sort_merge_hi_merge_lo_merge_comp_comp_3_a_2;
        sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_1_a_2 <= sort_merge_hi_merge_lo_merge_comp_comp_3_a_1;
    else
        sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_1_a_2 <= sort_merge_hi_merge_lo_merge_comp_comp_3_a_1;
        sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_1_a_2 <= sort_merge_hi_merge_lo_merge_comp_comp_3_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_COMP_3_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2, sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1 > sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2)) then
        sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_LO_MERGE_COMP_1_LOGIC: process (sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_1_a_2, sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_1_a_1 > sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_1_a_2)) then
        sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_1_a_2;
        sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_1_a_1;
    else
        sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_1_a_1;
        sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_lo_merge_lo_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_LO_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2, sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1 > sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2)) then
        sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

y_list(16) <= sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

y_list(17) <= sort_merge_hi_merge_lo_merge_lo_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2, sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1 > sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2)) then
        sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

y_list(18) <= sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

y_list(19) <= sort_merge_hi_merge_lo_merge_lo_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2, sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1 > sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2)) then
        sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_HI_MERGE_COMP_1_LOGIC: process (sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_1_a_2, sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_1_a_1 > sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_1_a_2)) then
        sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_1_a_2;
        sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_1_a_1;
    else
        sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_1_a_1;
        sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_lo_merge_hi_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_HI_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2, sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1 > sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2)) then
        sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

y_list(20) <= sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

y_list(21) <= sort_merge_hi_merge_lo_merge_hi_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2, sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1 > sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2)) then
        sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_LO_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

y_list(22) <= sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

y_list(23) <= sort_merge_hi_merge_lo_merge_hi_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_merge_hi_merge_hi_merge_comp_comp_0_a_2, sort_merge_hi_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_hi_merge_comp_comp_0_a_1 > sort_merge_hi_merge_hi_merge_comp_comp_0_a_2)) then
        sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_hi_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_hi_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_1_LOGIC: process (sort_merge_hi_merge_hi_merge_comp_comp_1_a_2, sort_merge_hi_merge_hi_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_hi_merge_comp_comp_1_a_1 > sort_merge_hi_merge_hi_merge_comp_comp_1_a_2)) then
        sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_1_a_1 <= sort_merge_hi_merge_hi_merge_comp_comp_1_a_2;
        sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_1_a_1 <= sort_merge_hi_merge_hi_merge_comp_comp_1_a_1;
    else
        sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_1_a_1 <= sort_merge_hi_merge_hi_merge_comp_comp_1_a_1;
        sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_1_a_1 <= sort_merge_hi_merge_hi_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_2_LOGIC: process (sort_merge_hi_merge_hi_merge_comp_comp_2_a_2, sort_merge_hi_merge_hi_merge_comp_comp_2_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_hi_merge_comp_comp_2_a_1 > sort_merge_hi_merge_hi_merge_comp_comp_2_a_2)) then
        sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_hi_merge_comp_comp_2_a_2;
        sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_hi_merge_comp_comp_2_a_1;
    else
        sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_hi_merge_comp_comp_2_a_1;
        sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_hi_merge_comp_comp_2_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_2_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_3_LOGIC: process (sort_merge_hi_merge_hi_merge_comp_comp_3_a_2, sort_merge_hi_merge_hi_merge_comp_comp_3_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_hi_merge_comp_comp_3_a_1 > sort_merge_hi_merge_hi_merge_comp_comp_3_a_2)) then
        sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_1_a_2 <= sort_merge_hi_merge_hi_merge_comp_comp_3_a_2;
        sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_1_a_2 <= sort_merge_hi_merge_hi_merge_comp_comp_3_a_1;
    else
        sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_1_a_2 <= sort_merge_hi_merge_hi_merge_comp_comp_3_a_1;
        sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_1_a_2 <= sort_merge_hi_merge_hi_merge_comp_comp_3_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_COMP_3_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2, sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1 > sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2)) then
        sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_LO_MERGE_COMP_1_LOGIC: process (sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_1_a_2, sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_1_a_1 > sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_1_a_2)) then
        sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_1_a_2;
        sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_1_a_1;
    else
        sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_1_a_1;
        sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_hi_merge_lo_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_LO_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2, sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1 > sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2)) then
        sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_LO_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

y_list(24) <= sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

y_list(25) <= sort_merge_hi_merge_hi_merge_lo_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2, sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1 > sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2)) then
        sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_LO_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

y_list(26) <= sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

y_list(27) <= sort_merge_hi_merge_hi_merge_lo_merge_hi_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2, sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1 > sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2)) then
        sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1 <= sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_HI_MERGE_COMP_1_LOGIC: process (sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_1_a_2, sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_1_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_1_a_1 > sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_1_a_2)) then
        sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_1_a_2;
        sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_1_a_1;
    else
        sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_1_a_1;
        sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2 <= sort_merge_hi_merge_hi_merge_hi_merge_comp_comp_1_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_HI_MERGE_COMP_1_LOGIC;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC: process (sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2, sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1 > sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2)) then
        sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1;
    else
        sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_HI_MERGE_LO_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

y_list(28) <= sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

y_list(29) <= sort_merge_hi_merge_hi_merge_hi_merge_lo_merge_hi_merge_feed_in_a;

-- Combinatorial logic 
MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC: process (sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2, sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1) is
begin
    if ('1' = stdl(sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1 > sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2)) then
        sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2;
        sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1;
    else
        sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_lo_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_1;
        sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_hi_merge_feed_in_a <= sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_comp_comp_0_a_2;
    end if;
end process MEDIAN_FILTER_SORT_MERGE_HI_MERGE_HI_MERGE_HI_MERGE_HI_MERGE_COMP_0_LOGIC;

-- Combinatorial logic 

y_list(30) <= sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_lo_merge_feed_in_a;

-- Combinatorial logic 

y_list(31) <= sort_merge_hi_merge_hi_merge_hi_merge_hi_merge_hi_merge_feed_in_a;

MEDIAN_FILTER_RTL_IN: process (clk) is
begin
    if rising_edge(clk) then
        if (reset = '1') then
            x_list(0) <= to_signed(0, 24);
            x_list(1) <= to_signed(0, 24);
            x_list(2) <= to_signed(0, 24);
            x_list(3) <= to_signed(0, 24);
            x_list(4) <= to_signed(0, 24);
            x_list(5) <= to_signed(0, 24);
            x_list(6) <= to_signed(0, 24);
            x_list(7) <= to_signed(0, 24);
            x_list(8) <= to_signed(0, 24);
            x_list(9) <= to_signed(0, 24);
            x_list(10) <= to_signed(0, 24);
            x_list(11) <= to_signed(0, 24);
            x_list(12) <= to_signed(0, 24);
            x_list(13) <= to_signed(0, 24);
            x_list(14) <= to_signed(0, 24);
            x_list(15) <= to_signed(0, 24);
            x_list(16) <= to_signed(0, 24);
            x_list(17) <= to_signed(0, 24);
            x_list(18) <= to_signed(0, 24);
            x_list(19) <= to_signed(0, 24);
            x_list(20) <= to_signed(0, 24);
            x_list(21) <= to_signed(0, 24);
            x_list(22) <= to_signed(0, 24);
            x_list(23) <= to_signed(0, 24);
            x_list(24) <= to_signed(0, 24);
            x_list(25) <= to_signed(0, 24);
            x_list(26) <= to_signed(0, 24);
            x_list(27) <= to_signed(0, 24);
            x_list(28) <= to_signed(0, 24);
            x_list(29) <= to_signed(0, 24);
            x_list(30) <= to_signed(0, 24);
            x_list(31) <= to_signed(0, 24);
            xcnt <= to_unsigned(1, 6);
        else
            if ((xcnt = 32) and bool(dvi)) then
                x_list(to_integer(signed(resize(xcnt, 7)) - 1)) <= xin;
                xcnt <= to_unsigned(1, 6);
            elsif bool(dvi) then
                x_list(to_integer(signed(resize(xcnt, 7)) - 1)) <= xin;
                xcnt <= (xcnt + 1);
            end if;
        end if;
    end if;
end process MEDIAN_FILTER_RTL_IN;


yout <= shift_right((y_list(16) + y_list((16 + 1))), 1);

end architecture MyHDL;
