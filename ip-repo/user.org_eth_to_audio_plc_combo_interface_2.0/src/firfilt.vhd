-- File: firfilt.vhd
-- Generated by MyHDL 0.10
-- Date: Thu Aug 27 20:41:04 2020


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_interpolator.all;

entity compfilt is
generic (
        SIG_IN_WIDTH :integer := 28;
        SIG_OUT_WIDTH :integer := 30
    );
    port (
        clk: in std_logic;
        rst: in std_logic;
        x: in signed (SIG_IN_WIDTH-1 downto 0);
        xdv: in std_logic;
        y: out signed (SIG_OUT_WIDTH-1 downto 0);
        ydv: out std_logic
    );
end entity compfilt;


architecture compfilt_arch of compfilt is



--type t_array_taps is array(0 to 48-1) of signed (SIG_WIDTH-1 downto 0);
--signal taps: t_array_taps;

--begin




--FIRFILT_HDL_SOP: process (clk) is
--    --variable sop: integer;  --  -2147483648 to +2147483647
--    variable c: integer;
--    --variable mul: integer;
--    variable sop: signed(55 downto 0); --to_signed(0, 32);
--    --variable c: signed(SIG_WIDTH-1 downto 0); --to_signed(0, 32);
--begin
--    if rising_edge(clk) then
--        if (rst = '1') then
--            for ii in 0 to 48-1 loop
--                taps(ii) <= to_signed(0, 28);
--            end loop;
--            sig_out <= to_signed(0, 28);
--        else
--            --sop := 0;
--            sop := to_signed(0, sop'length);
--            for ii in 0 to 48-1 loop
--                if (ii = 0) then
--                    taps(ii) <= sig_in;
--                else
--                    taps(ii) <= taps((ii - 1));
--                end if;
--                case ii is
--                    when 0 => c := 2578;
--                    when 1 => c := -2382;
--                    when 2 => c := -18247;
--                    when 3 => c := -1057;
--                    when 4 => c := 57455;
--                    when 5 => c := 31740;
--                    when 6 => c := -124705;
--                    when 7 => c := -128537;
--                    when 8 => c := 202615;
--                    when 9 => c := 342280;
--                    when 10 => c := -234561;
--                    when 11 => c := -718848;
--                    when 12 => c := 111036;
--                    when 13 => c := 1273049;
--                    when 14 => c := 338923;
--                    when 15 => c := -1959498;
--                    when 16 => c := -1367817;
--                    when 17 => c := 2640659;
--                    when 18 => c := 3419714;
--                    when 19 => c := -2997358;
--                    when 20 => c := -7744392;
--                    when 21 => c := 1782112;
--                    when 22 => c := 22067230;
--                    when 23 => c := 33036171;
--                    when 24 => c := 22377912;
--                    when 25 => c := 1839950;
--                    when 26 => c := -8067502;
--                    when 27 => c := -3170741;
--                    when 28 => c := 3663079;
--                    when 29 => c := 2873635;
--                    when 30 => c := -1508565;
--                    when 31 => c := -2198541;
--                    when 32 => c := 385220;
--                    when 33 => c := 1477164;
--                    when 34 => c := 132030;
--                    when 35 => c := -866468;
--                    when 36 => c := -289363;
--                    when 37 => c := 431495;
--                    when 38 => c := 262554;
--                    when 39 => c := -171329;
--                    when 40 => c := -172292;
--                    when 41 => c := 45594;
--                    when 42 => c := 87030;
--                    when 43 => c := -1673;
--                    when 44 => c := -32437;
--                    when 45 => c := -4938;
--                    when 46 => c := 7342;
--                    when others => c := 1543;
--                end case;
--                --sop := sop + (MY_TO_INTEGER(taps(ii)) * c);
--                sop := sop + (taps(ii) * c);
--                --sop := sop + to_integer(signed(signed(taps(ii)) * to_signed(c, 28)));
--                --report "sop'value = " & integer'image(sop);
--                --cu := to_signed(c, 32);
--                --mul := taps(ii) * cu;
--                --report "mul'value = " & integer'image(mul);
                
--                --sop := to_integer(sop + mul);
--                --report "sopnext'value = " & integer'image(sop);
                
--            end loop;
--            sig_out <= shift_right(sop, SIG_WIDTH-1)(SIG_WIDTH-1 downto 0);
--            --sig_out <= shift_right(to_signed(sop, 28), SIG_WIDTH-1);
--            --sig_out <= to_signed(sop, 28);
--        end if;
--    end if;
--end process FIRFILT_HDL_SOP;


--type t_array_taps is array(0 to 16-1) of signed (23 downto 0);
--signal taps: t_array_taps;


   


--begin




--FIRFILT_HDL_SOP: process (clk) is
--    variable sop: integer;
--    variable c: integer;
--    variable sop_signed : signed(29 downto 0);
--begin
--    if rising_edge(clk) then
--        if bool(rst) then
--            for ii in 0 to 16-1 loop
--                taps(ii) <= to_signed(0, 24);
--            end loop;
--            sig_out <= to_signed(0, 28);
--        else
--            sop := 0;
--            for ii in 0 to 16-1 loop
--                if (ii = 0) then
--                    taps(ii) <= sig_in;
--                else
--                    taps(ii) <= taps((ii - 1));
--                end if;
--                case ii is
--                    when 0 => c := -1010;
--                    when 1 => c := 165;
--                    when 2 => c := 54176;
--                    when 3 => c := 57877;
--                    when 4 => c := -297562;
--                    when 5 => c := -528914;
--                    when 6 => c := 549547;
--                    when 7 => c := 2262863;
--                    when 8 => c := 2262863;
--                    when 9 => c := 549547;
--                    when 10 => c := -528914;
--                    when 11 => c := -297562;
--                    when 12 => c := 57877;
--                    when 13 => c := 54176;
--                    when 14 => c := 165;
--                    when others => c := -1010;
--                end case;
--                sop := to_integer(sop + (taps(ii) * c));
--            end loop;
--            sop_signed := to_signed(sop, sop_signed'length);
            
----            sig_out <= to_signed(shift_right(sop, 23), 28);
----            sig_out <= shift_right(sop, SIG_WIDTH-1)(27 downto 0);
--              sig_out <= sop_signed(29 downto 2);

--        end if;
--    end if;
--end process FIRFILT_HDL_SOP;
------------------------------------------------------------------------------------------------------------------

signal dvd: std_logic;
signal xi: signed (27 downto 0);
signal y_tmp: signed (SIG_OUT_WIDTH-1 downto 0);
signal yacc: signed (51 downto 0);
type t_array_ffd is array(0 to 11-1) of signed (27 downto 0);
signal ffd: t_array_ffd;

begin




--COMPFILTER_BEH_DIRECT_FORM_ONE: process (clk) is
--    variable c: signed (23 downto 0);
----    variable sop: integer;
--    variable sop: signed (51 downto 0);
--begin
--    if rising_edge(clk) then
--        if xdv = '1' then
--            xi <= x;
--            for i in 0 to (15 - 1)-1 loop
--                ffd((i + 1)) <= ffd(i);
--            end loop;
--            ffd(0) <= xi;
--            case 0 is
--                when 0 => c := to_signed(-707, 24);
--                when 1 => c := to_signed(-14583, 24);
--                when 2 => c := to_signed(33581, 24);
--                when 3 => c := to_signed(180849, 24);
--                when 4 => c := to_signed(-169087, 24);
--                when 5 => c := to_signed(-857835, 24);
--                when 6 => c := to_signed(220518, 24);
--                when 7 => c := to_signed(2704416, 24);
--                when 8 => c := to_signed(2704416, 24);
--                when 9 => c := to_signed(220518, 24);
--                when 10 => c := to_signed(-857835, 24);
--                when 11 => c := to_signed(-169087, 24);
--                when 12 => c := to_signed(180849, 24);
--                when 13 => c := to_signed(33581, 24);
--                when 14 => c := to_signed(-14583, 24);
--                when others => c := to_signed(-707, 24);
--            end case;
--            sop := xi * c;
--            for ii in 0 to 15-1 loop
--                case (ii + 1) is
--                    when 0 => c := to_signed(-707, 24);
--                    when 1 => c := to_signed(-14583, 24);
--                    when 2 => c := to_signed(33581, 24);
--                    when 3 => c := to_signed(180849, 24);
--                    when 4 => c := to_signed(-169087, 24);
--                    when 5 => c := to_signed(-857835, 24);
--                    when 6 => c := to_signed(220518, 24);
--                    when 7 => c := to_signed(2704416, 24);
--                    when 8 => c := to_signed(2704416, 24);
--                    when 9 => c := to_signed(220518, 24);
--                    when 10 => c := to_signed(-857835, 24);
--                    when 11 => c := to_signed(-169087, 24);
--                    when 12 => c := to_signed(180849, 24);
--                    when 13 => c := to_signed(33581, 24);
--                    when 14 => c := to_signed(-14583, 24);
--                    when others => c := to_signed(-707, 24);
--                end case;
--                sop := sop + (c * ffd(ii));
--            end loop;
--            yacc <= sop;
--        end if;
--    end if;
--end process COMPFILTER_BEH_DIRECT_FORM_ONE;


--COMPFILTER_BEH_DIRECT_FORM_ONE: process (clk) is
--    variable c: signed (23 downto 0);
--    variable sop: signed (51 downto 0);
--begin
--    if rising_edge(clk) then
--        if bool(xdv) then
--            xi <= x;
--            for i in 0 to (7 - 1)-1 loop
--                ffd((i + 1)) <= ffd(i);
--            end loop;
--            ffd(0) <= xi;
--            case 0 is
--                when 0 => c := to_signed(17467, 24);
--                when 1 => c := to_signed(-320382, 24);
--                when 2 => c := to_signed(-689060, 24);
--                when 3 => c := to_signed(3089127, 24);
--                when 4 => c := to_signed(3089127, 24);
--                when 5 => c := to_signed(-689060, 24);
--                when 6 => c := to_signed(-320382, 24);
--                when others => c := to_signed(17467, 24);
--            end case;
--            sop := xi * c;
--            for ii in 0 to 7-1 loop
--                case (ii + 1) is
--                    when 0 => c := to_signed(17467, 24);
--                when 1 => c := to_signed(-320382, 24);
--                when 2 => c := to_signed(-689060, 24);
--                when 3 => c := to_signed(3089127, 24);
--                when 4 => c := to_signed(3089127, 24);
--                when 5 => c := to_signed(-689060, 24);
--                when 6 => c := to_signed(-320382, 24);
--                when others => c := to_signed(17467, 24);
--                end case;
--                sop := sop + (c * ffd(ii));
--            end loop;
--            yacc <= sop;
--        end if;
--    end if;
--end process COMPFILTER_BEH_DIRECT_FORM_ONE;



FIRFILT_HDL_SOP: process (clk) is
    variable c: signed (23 downto 0);
    variable sop: signed (51 downto 0);
begin
    if rising_edge(clk) then
        if bool(rst) then
            for ii in 0 to 11-1 loop
                ffd(ii) <= to_signed(0, 24);
            end loop;
            yacc <= to_signed(0, yacc'length);
        else
            sop := to_signed(0, sop'length);
            for ii in 0 to 11-1 loop
                if (ii = 0) then
                    ffd(ii) <= x;
                else
                    ffd(ii) <= ffd((ii - 1));
                end if;
                case ii is
--                    when 0 => c := to_signed(17467, 24);
--                    when 1 => c := to_signed(-320382, 24);
--                    when 2 => c := to_signed(-689060, 24);
--                    when 3 => c := to_signed(3089127, 24);
--                    when 4 => c := to_signed(3089127, 24);
--                    when 5 => c := to_signed(-689060, 24);
--                    when 6 => c := to_signed(-320382, 24);
--                    when others => c := to_signed(17467, 24);

--                    when 0 => c := to_signed(264869, 24);
--                    when 1 => c := to_signed(1285765, 24);
--                    when 2 => c := to_signed(-6830573, 24);
--                    when 3 => c := to_signed(7377089, 24);
--                    when 4 => c := to_signed(7377089, 24);
--                    when 5 => c := to_signed(-6830573, 24);
--                    when 6 => c := to_signed(1285765, 24);
--                    when others => c := to_signed(264869, 24);


--                    when 0 => c := to_signed(-23350, 24);
--                    when 1 => c := to_signed(-60772, 24);
--                    when 2 => c := to_signed(790699, 24);
--                    when 3 => c := to_signed(-867459, 24);
--                    when 4 => c := to_signed(-2422762, 24);
--                    when 5 => c := to_signed(4680796, 24);
--                    when 6 => c := to_signed(4680796, 24);
--                    when 7 => c := to_signed(-2422762, 24);
--                    when 8 => c := to_signed(-867459, 24);
--                    when 9 => c := to_signed(790699, 24);
--                    when 10 => c := to_signed(-60772, 24);
--                    when others => c := to_signed(-23350, 24);

--                    when 0 => c := to_signed(-1358, 24);
--                    when 1 => c := to_signed(-15922, 24);
--                    when 2 => c := to_signed(375694, 24);
--                    when 3 => c := to_signed(-590753, 24);
--                    when 4 => c := to_signed(-2045655, 24);
--                    when 5 => c := to_signed(4375148, 24);
--                    when 6 => c := to_signed(4375148, 24);
--                    when 7 => c := to_signed(-2045655, 24);
--                    when 8 => c := to_signed(-590753, 24);
--                    when 9 => c := to_signed(375694, 24);
--                    when 10 => c := to_signed(-15922, 24);
--                    when others => c := to_signed(-1358, 24);

                      when 0 => c := to_signed(-1680, 24);
                    when 1 => c := to_signed(54163, 24);
                    when 2 => c := to_signed(230013, 24);
                    when 3 => c := to_signed(-1665932, 24);
                    when 4 => c := to_signed(472747, 24);
                    when 5 => c := to_signed(6015679, 24);
                    when 6 => c := to_signed(472747, 24);
                    when 7 => c := to_signed(-1665932, 24);
                    when 8 => c := to_signed(230013, 24);
                    when 9 => c := to_signed(54163, 24);
                    when others => c := to_signed(-1680, 24);



                end case;
                sop := sop + (ffd(ii) * c);
            end loop;
            
            yacc <= sop;
        end if;
    end if;
end process FIRFILT_HDL_SOP;

COMPFILTER_BEH_OUTPUT: process (clk, rst) is
begin
    if (rst = '1') then
        ydv <= '0';
        y_tmp <= to_signed(0, SIG_OUT_WIDTH);
        dvd <= '0';
    elsif rising_edge(clk) then
        dvd <= xdv;
--        y <= signed(unsigned(yacc(56-1 downto 22+2+4)));
--        y_tmp <= resize ( yacc , y_tmp ' length ) ;
--        y_tmp <= signed(unsigned(yacc(52-1 downto 52-SIG_OUT_WIDTH)));
        y_tmp <= signed(yacc(52-1 downto 52-SIG_OUT_WIDTH));
        ydv <= dvd;
    end if;
end process COMPFILTER_BEH_OUTPUT;

--y <= y_tmp(29 downto 2);
-- y <= resize ( y_tmp , y ' length ) ;
y<= y_tmp; 
 
 
 
 -------------------------------------------------------------
 
-- signal dvd: std_logic;
--signal xi: signed (27 downto 0);
--signal y_tmp: signed (32-1 downto 0);
--signal yacc: signed (54-1 downto 0);
--type t_array_ffd is array(0 to 15-1) of signed (27 downto 0);
--signal ffd: t_array_ffd;

--begin




--COMPFILTER_BEH_DIRECT_FORM_ONE: process (clk) is
--    variable c: signed (25 downto 0);
----    variable sop: integer;
--    variable sop: signed (53 downto 0);
--begin
--    if rising_edge(clk) then
--        if xdv = '1' then
--            xi <= x;
--            for i in 0 to (15 - 1)-1 loop
--                ffd((i + 1)) <= ffd(i);
--            end loop;
--            ffd(0) <= xi;
--            case 0 is
--                when 0 => c := to_signed(-5437, 26);
--                when 1 => c := to_signed(62115, 26);
--                when 2 => c := to_signed(2589, 26);
--                when 3 => c := to_signed(-715109, 26);
--                when 4 => c := to_signed(1625541, 26);
--                when 5 => c := to_signed(-87677, 26);
--                when 6 => c := to_signed(-4903743, 26);
--                when 7 => c := to_signed(6118874, 26);
--                when 8 => c := to_signed(6118874, 26);
--                when 9 => c := to_signed(-4903743, 26);
--                when 10 => c := to_signed(-87677, 26);
--                when 11 => c := to_signed(1625541, 26);
--                when 12 => c := to_signed(-715109, 26);
--                when 13 => c := to_signed(2589, 26);
--                when 14 => c := to_signed(62115, 26);
--                when others => c := to_signed(-5437, 26);
--            end case;
--            sop := xi * c;
--            for ii in 0 to 15-1 loop
--                case (ii + 1) is
--                    when 0 => c := to_signed(-5437, 26);
--                    when 1 => c := to_signed(62115, 26);
--                    when 2 => c := to_signed(2589, 26);
--                    when 3 => c := to_signed(-715109, 26);
--                    when 4 => c := to_signed(1625541, 26);
--                    when 5 => c := to_signed(-87677, 26);
--                    when 6 => c := to_signed(-4903743, 26);
--                    when 7 => c := to_signed(6118874, 26);
--                    when 8 => c := to_signed(6118874, 26);
--                    when 9 => c := to_signed(-4903743, 26);
--                    when 10 => c := to_signed(-87677, 26);
--                    when 11 => c := to_signed(1625541, 26);
--                    when 12 => c := to_signed(-715109, 26);
--                    when 13 => c := to_signed(2589, 26);
--                    when 14 => c := to_signed(62115, 26);
--                    when others => c := to_signed(-5437, 26);
--                end case;
--                sop := sop + (c * ffd(ii));
--            end loop;
--            yacc <= sop;
--        end if;
--    end if;
--end process COMPFILTER_BEH_DIRECT_FORM_ONE;

--COMPFILTER_BEH_OUTPUT: process (clk, rst) is
--begin
--    if (rst = '1') then
--        ydv <= '0';
--        y_tmp <= to_signed(0, 32);
--        dvd <= '0';
--    elsif rising_edge(clk) then
--        dvd <= xdv;
----        y <= signed(unsigned(yacc(56-1 downto 22+2+4)));
----        y_tmp <= resize ( yacc , y_tmp ' length ) ;
--        y_tmp <= signed(unsigned(yacc(54-1 downto 22)));
        
--        ydv <= dvd;
--    end if;
--end process COMPFILTER_BEH_OUTPUT;

----y <= y_tmp(29 downto 2);
-- y <= resize ( y_tmp , y ' length ) ;
 
 
 
 
 
 
 
 
 
end architecture compfilt_arch;





