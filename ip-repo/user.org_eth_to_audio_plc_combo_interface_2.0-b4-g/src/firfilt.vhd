-- File: firfilt.vhd
-- Generated by MyHDL 0.10
-- Date: Thu Aug 27 20:41:04 2020


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_interpolator.all;

entity compfilt is
generic (
        SIG_WIDTH :integer := 28
    );
    port (
        clk: in std_logic;
        rst: in std_logic;
        sig_in: in signed (27 downto 0);
        sig_out: out signed (27 downto 0)
    );
end entity compfilt;


architecture compfilt_arch of compfilt is



type t_array_taps is array(0 to 48-1) of signed (27 downto 0);
signal taps: t_array_taps;

begin




FIRFILT_HDL_SOP: process (clk) is
    --variable sop: integer;  --  -2147483648 to +2147483647
    variable c: integer;
    --variable mul: integer;
    variable sop: signed(55 downto 0); --to_signed(0, 32);
    --variable c: signed(27 downto 0); --to_signed(0, 32);
begin
    if rising_edge(clk) then
        if (rst = '1') then
            for ii in 0 to 48-1 loop
                taps(ii) <= to_signed(0, 28);
            end loop;
            sig_out <= to_signed(0, 28);
        else
            --sop := 0;
            sop := to_signed(0, sop'length);
            for ii in 0 to 48-1 loop
                if (ii = 0) then
                    taps(ii) <= sig_in;
                else
                    taps(ii) <= taps((ii - 1));
                end if;
                case ii is
                    when 0 => c := 2578;
                    when 1 => c := -2382;
                    when 2 => c := -18247;
                    when 3 => c := -1057;
                    when 4 => c := 57455;
                    when 5 => c := 31740;
                    when 6 => c := -124705;
                    when 7 => c := -128537;
                    when 8 => c := 202615;
                    when 9 => c := 342280;
                    when 10 => c := -234561;
                    when 11 => c := -718848;
                    when 12 => c := 111036;
                    when 13 => c := 1273049;
                    when 14 => c := 338923;
                    when 15 => c := -1959498;
                    when 16 => c := -1367817;
                    when 17 => c := 2640659;
                    when 18 => c := 3419714;
                    when 19 => c := -2997358;
                    when 20 => c := -7744392;
                    when 21 => c := 1782112;
                    when 22 => c := 22067230;
                    when 23 => c := 33036171;
                    when 24 => c := 22377912;
                    when 25 => c := 1839950;
                    when 26 => c := -8067502;
                    when 27 => c := -3170741;
                    when 28 => c := 3663079;
                    when 29 => c := 2873635;
                    when 30 => c := -1508565;
                    when 31 => c := -2198541;
                    when 32 => c := 385220;
                    when 33 => c := 1477164;
                    when 34 => c := 132030;
                    when 35 => c := -866468;
                    when 36 => c := -289363;
                    when 37 => c := 431495;
                    when 38 => c := 262554;
                    when 39 => c := -171329;
                    when 40 => c := -172292;
                    when 41 => c := 45594;
                    when 42 => c := 87030;
                    when 43 => c := -1673;
                    when 44 => c := -32437;
                    when 45 => c := -4938;
                    when 46 => c := 7342;
                    when others => c := 1543;
                end case;
                --sop := sop + (MY_TO_INTEGER(taps(ii)) * c);
                sop := sop + (taps(ii) * c);
                --sop := sop + to_integer(signed(signed(taps(ii)) * to_signed(c, 28)));
                --report "sop'value = " & integer'image(sop);
                --cu := to_signed(c, 32);
                --mul := taps(ii) * cu;
                --report "mul'value = " & integer'image(mul);
                
                --sop := to_integer(sop + mul);
                --report "sopnext'value = " & integer'image(sop);
                
            end loop;
            sig_out <= shift_right(sop, 27)(27 downto 0);
            --sig_out <= shift_right(to_signed(sop, 28), 27);
            --sig_out <= to_signed(sop, 28);
        end if;
    end if;
end process FIRFILT_HDL_SOP;

end architecture compfilt_arch;

